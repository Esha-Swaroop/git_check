{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-latest.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd \n",
    "import copy\n",
    "import numpy as np\n",
    "import seaborn as sns \n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline \n",
    "import cufflinks as cf \n",
    "cf.go_offline()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1000, 21)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# input_data = pd.read_csv(url, error_bad_lines=False)\n",
    "input_data = pd.read_csv(\"german_credit_risk_data.csv\",index_col =0)\n",
    "input_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>default</th>\n",
       "      <th>account_check_status</th>\n",
       "      <th>duration_in_month</th>\n",
       "      <th>credit_history</th>\n",
       "      <th>purpose</th>\n",
       "      <th>credit_amount</th>\n",
       "      <th>savings</th>\n",
       "      <th>present_emp_since</th>\n",
       "      <th>installment_as_income_perc</th>\n",
       "      <th>personal_status_sex</th>\n",
       "      <th>...</th>\n",
       "      <th>present_res_since</th>\n",
       "      <th>property</th>\n",
       "      <th>age</th>\n",
       "      <th>other_installment_plans</th>\n",
       "      <th>housing</th>\n",
       "      <th>credits_this_bank</th>\n",
       "      <th>job</th>\n",
       "      <th>people_under_maintenance</th>\n",
       "      <th>telephone</th>\n",
       "      <th>foreign_worker</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>&lt; 0 DM</td>\n",
       "      <td>6</td>\n",
       "      <td>critical account/ other credits existing (not ...</td>\n",
       "      <td>domestic appliances</td>\n",
       "      <td>1169</td>\n",
       "      <td>unknown/ no savings account</td>\n",
       "      <td>.. &gt;= 7 years</td>\n",
       "      <td>4</td>\n",
       "      <td>male : single</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>real estate</td>\n",
       "      <td>67</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>2</td>\n",
       "      <td>skilled employee / official</td>\n",
       "      <td>1</td>\n",
       "      <td>yes, registered under the customers name</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0 &lt;= ... &lt; 200 DM</td>\n",
       "      <td>48</td>\n",
       "      <td>existing credits paid back duly till now</td>\n",
       "      <td>domestic appliances</td>\n",
       "      <td>5951</td>\n",
       "      <td>... &lt; 100 DM</td>\n",
       "      <td>1 &lt;= ... &lt; 4 years</td>\n",
       "      <td>2</td>\n",
       "      <td>female : divorced/separated/married</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>real estate</td>\n",
       "      <td>22</td>\n",
       "      <td>none</td>\n",
       "      <td>own</td>\n",
       "      <td>1</td>\n",
       "      <td>skilled employee / official</td>\n",
       "      <td>1</td>\n",
       "      <td>none</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   default account_check_status  duration_in_month  \\\n",
       "0        0               < 0 DM                  6   \n",
       "1        1    0 <= ... < 200 DM                 48   \n",
       "\n",
       "                                      credit_history              purpose  \\\n",
       "0  critical account/ other credits existing (not ...  domestic appliances   \n",
       "1           existing credits paid back duly till now  domestic appliances   \n",
       "\n",
       "   credit_amount                      savings   present_emp_since  \\\n",
       "0           1169  unknown/ no savings account       .. >= 7 years   \n",
       "1           5951                 ... < 100 DM  1 <= ... < 4 years   \n",
       "\n",
       "   installment_as_income_perc                  personal_status_sex  ...  \\\n",
       "0                           4                        male : single  ...   \n",
       "1                           2  female : divorced/separated/married  ...   \n",
       "\n",
       "  present_res_since     property age  other_installment_plans housing  \\\n",
       "0                 4  real estate  67                     none     own   \n",
       "1                 2  real estate  22                     none     own   \n",
       "\n",
       "  credits_this_bank                          job people_under_maintenance  \\\n",
       "0                 2  skilled employee / official                        1   \n",
       "1                 1  skilled employee / official                        1   \n",
       "\n",
       "                                   telephone foreign_worker  \n",
       "0  yes, registered under the customers name             yes  \n",
       "1                                       none            yes  \n",
       "\n",
       "[2 rows x 21 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "input_data.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 1000 entries, 0 to 999\n",
      "Data columns (total 21 columns):\n",
      "default                       1000 non-null int64\n",
      "account_check_status          1000 non-null object\n",
      "duration_in_month             1000 non-null int64\n",
      "credit_history                1000 non-null object\n",
      "purpose                       1000 non-null object\n",
      "credit_amount                 1000 non-null int64\n",
      "savings                       1000 non-null object\n",
      "present_emp_since             1000 non-null object\n",
      "installment_as_income_perc    1000 non-null int64\n",
      "personal_status_sex           1000 non-null object\n",
      "other_debtors                 1000 non-null object\n",
      "present_res_since             1000 non-null int64\n",
      "property                      1000 non-null object\n",
      "age                           1000 non-null int64\n",
      "other_installment_plans       1000 non-null object\n",
      "housing                       1000 non-null object\n",
      "credits_this_bank             1000 non-null int64\n",
      "job                           1000 non-null object\n",
      "people_under_maintenance      1000 non-null int64\n",
      "telephone                     1000 non-null object\n",
      "foreign_worker                1000 non-null object\n",
      "dtypes: int64(8), object(13)\n",
      "memory usage: 171.9+ KB\n"
     ]
    }
   ],
   "source": [
    "input_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": true
       },
       "data": [
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(255, 153, 51, 1.0)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "default",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          1,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          1,
          1,
          0,
          1,
          1,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          1,
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          0,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          1,
          1,
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          1,
          1,
          1,
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          1,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          1,
          0,
          1,
          1,
          1,
          0,
          0,
          1,
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0,
          1,
          1,
          0,
          1,
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          0
         ]
        }
       ],
       "layout": {
        "barmode": "overlay",
        "legend": {
         "bgcolor": "#F5F6F9",
         "font": {
          "color": "#4D5663"
         }
        },
        "paper_bgcolor": "#F5F6F9",
        "plot_bgcolor": "#F5F6F9",
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "font": {
          "color": "#4D5663"
         }
        },
        "xaxis": {
         "gridcolor": "#E1E5ED",
         "showgrid": true,
         "tickfont": {
          "color": "#4D5663"
         },
         "title": {
          "font": {
           "color": "#4D5663"
          },
          "text": ""
         },
         "zerolinecolor": "#E1E5ED"
        },
        "yaxis": {
         "gridcolor": "#E1E5ED",
         "showgrid": true,
         "tickfont": {
          "color": "#4D5663"
         },
         "title": {
          "font": {
           "color": "#4D5663"
          },
          "text": ""
         },
         "zerolinecolor": "#E1E5ED"
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"f66c54cb-f27a-4ff6-845b-7335dbb16f21\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    window.PLOTLYENV.BASE_URL='https://plot.ly';\n",
       "                    \n",
       "                if (document.getElementById(\"f66c54cb-f27a-4ff6-845b-7335dbb16f21\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        'f66c54cb-f27a-4ff6-845b-7335dbb16f21',\n",
       "                        [{\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(255, 153, 51, 1.0)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"default\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]}],\n",
       "                        {\"barmode\": \"overlay\", \"legend\": {\"bgcolor\": \"#F5F6F9\", \"font\": {\"color\": \"#4D5663\"}}, \"paper_bgcolor\": \"#F5F6F9\", \"plot_bgcolor\": \"#F5F6F9\", \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"font\": {\"color\": \"#4D5663\"}}, \"xaxis\": {\"gridcolor\": \"#E1E5ED\", \"showgrid\": true, \"tickfont\": {\"color\": \"#4D5663\"}, \"title\": {\"font\": {\"color\": \"#4D5663\"}, \"text\": \"\"}, \"zerolinecolor\": \"#E1E5ED\"}, \"yaxis\": {\"gridcolor\": \"#E1E5ED\", \"showgrid\": true, \"tickfont\": {\"color\": \"#4D5663\"}, \"title\": {\"font\": {\"color\": \"#4D5663\"}, \"text\": \"\"}, \"zerolinecolor\": \"#E1E5ED\"}},\n",
       "                        {\"showLink\": true, \"linkText\": \"Export to plot.ly\", \"plotlyServerURL\": \"https://plot.ly\", \"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('f66c54cb-f27a-4ff6-845b-7335dbb16f21');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# sns.countplot(input_data['default'])\n",
    "input_data['default'].iplot(kind='histogram')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "numerical cols:  ['default', 'duration_in_month', 'credit_amount', 'installment_as_income_perc', 'present_res_since', 'age', 'credits_this_bank', 'people_under_maintenance'] \n",
      "\n",
      "categorical_cols:  ['account_check_status', 'credit_history', 'purpose', 'savings', 'present_emp_since', 'personal_status_sex', 'other_debtors', 'property', 'other_installment_plans', 'housing', 'job', 'telephone', 'foreign_worker'] \n",
      "\n"
     ]
    }
   ],
   "source": [
    "numericals_cols = list(input_data.select_dtypes(include =['int64','float64']).columns)\n",
    "print(\"numerical cols: \" , numericals_cols, \"\\n\")\n",
    "\n",
    "categorical_cols = list(input_data.select_dtypes(include =['object']).columns)\n",
    "print(\"categorical_cols: \" , categorical_cols, \"\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "yes    963\n",
       "no      37\n",
       "Name: foreign_worker, dtype: int64"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "input_data['foreign_worker'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "# cat_col_df = pd.DataFrame()\n",
    "cat_col_df = pd.DataFrame(columns = ['col_name', 'unique_levels'])\n",
    "\n",
    "for cat in categorical_cols:\n",
    "    cat_col_df_append = pd.DataFrame([{'col_name': cat,'unique_levels': input_data[cat].nunique()}])\n",
    "#     print(cat, \"has level count : \", input_data[cat].nunique())\n",
    "    cat_col_df = cat_col_df.append(cat_col_df_append)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                  col_name unique_levels\n",
      "0     account_check_status             4\n",
      "0           credit_history             5\n",
      "0                  purpose            10\n",
      "0                  savings             5\n",
      "0        present_emp_since             5\n",
      "0      personal_status_sex             4\n",
      "0            other_debtors             3\n",
      "0                 property             4\n",
      "0  other_installment_plans             3\n",
      "0                  housing             3\n",
      "0                      job             4\n",
      "0                telephone             2\n",
      "0           foreign_worker             2 \n",
      "\n",
      "54\n",
      "41\n"
     ]
    }
   ],
   "source": [
    "print(cat_col_df,\"\\n\")\n",
    "\n",
    "print(cat_col_df['unique_levels'].sum())\n",
    "print(cat_col_df['unique_levels'].sum() - cat_col_df.shape[0] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": true
       },
       "data": [
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(255, 153, 51, 1.0)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "account_check_status",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "0 <= ... < 200 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          ">= 200 DM / salary assignments for at least 1 year",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          ">= 200 DM / salary assignments for at least 1 year",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "< 0 DM",
          "no checking account",
          "no checking account",
          "< 0 DM",
          "no checking account",
          "< 0 DM",
          "0 <= ... < 200 DM"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(55, 128, 191, 1.0)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "credit_history",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "delay in paying off in the past",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "all credits at this bank paid back duly",
          "delay in paying off in the past",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "delay in paying off in the past",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "delay in paying off in the past",
          "delay in paying off in the past",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "no credits taken/ all credits paid back duly",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "delay in paying off in the past",
          "no credits taken/ all credits paid back duly",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "no credits taken/ all credits paid back duly",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "all credits at this bank paid back duly",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "no credits taken/ all credits paid back duly",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "delay in paying off in the past",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "delay in paying off in the past",
          "delay in paying off in the past",
          "all credits at this bank paid back duly",
          "critical account/ other credits existing (not at this bank)",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "no credits taken/ all credits paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)",
          "critical account/ other credits existing (not at this bank)",
          "all credits at this bank paid back duly",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "existing credits paid back duly till now",
          "critical account/ other credits existing (not at this bank)"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(50, 171, 96, 1.0)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "purpose",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "domestic appliances",
          "domestic appliances",
          "(vacation - does not exist?)",
          "radio/television",
          "car (new)",
          "(vacation - does not exist?)",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "business",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "business",
          "car (used)",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "car (new)",
          "car (used)",
          "radio/television",
          "radio/television",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "business",
          "business",
          "radio/television",
          "car (new)",
          "business",
          "radio/television",
          "domestic appliances",
          "(vacation - does not exist?)",
          "domestic appliances",
          "repairs",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "education",
          "car (used)",
          "car (used)",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "car (new)",
          "domestic appliances",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "car (used)",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "business",
          "domestic appliances",
          "business",
          "business",
          "domestic appliances",
          "education",
          "domestic appliances",
          "car (new)",
          "(vacation - does not exist?)",
          "domestic appliances",
          "car (used)",
          "domestic appliances",
          "furniture/equipment",
          "business",
          "(vacation - does not exist?)",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "car (used)",
          "radio/television",
          "domestic appliances",
          "domestic appliances",
          "business",
          "furniture/equipment",
          "domestic appliances",
          "business",
          "radio/television",
          "(vacation - does not exist?)",
          "car (new)",
          "education",
          "domestic appliances",
          "car (used)",
          "domestic appliances",
          "radio/television",
          "car (new)",
          "business",
          "(vacation - does not exist?)",
          "business",
          "domestic appliances",
          "car (used)",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "radio/television",
          "car (used)",
          "furniture/equipment",
          "car (new)",
          "car (new)",
          "radio/television",
          "business",
          "business",
          "(vacation - does not exist?)",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "radio/television",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "radio/television",
          "car (new)",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "education",
          "car (used)",
          "car (new)",
          "car (new)",
          "(vacation - does not exist?)",
          "radio/television",
          "radio/television",
          "domestic appliances",
          "domestic appliances",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "radio/television",
          "radio/television",
          "business",
          "car (new)",
          "car (new)",
          "radio/television",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "car (used)",
          "business",
          "radio/television",
          "education",
          "retraining",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "repairs",
          "car (new)",
          "car (new)",
          "radio/television",
          "radio/television",
          "radio/television",
          "radio/television",
          "business",
          "car (new)",
          "radio/television",
          "radio/television",
          "domestic appliances",
          "(vacation - does not exist?)",
          "car (used)",
          "radio/television",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "business",
          "business",
          "car (new)",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "car (new)",
          "domestic appliances",
          "radio/television",
          "business",
          "business",
          "business",
          "domestic appliances",
          "domestic appliances",
          "(vacation - does not exist?)",
          "domestic appliances",
          "radio/television",
          "car (used)",
          "radio/television",
          "(vacation - does not exist?)",
          "car (new)",
          "business",
          "retraining",
          "car (new)",
          "car (used)",
          "radio/television",
          "repairs",
          "business",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "business",
          "business",
          "domestic appliances",
          "retraining",
          "business",
          "domestic appliances",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "(vacation - does not exist?)",
          "domestic appliances",
          "business",
          "car (used)",
          "education",
          "domestic appliances",
          "radio/television",
          "domestic appliances",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "business",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "business",
          "retraining",
          "business",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "car (new)",
          "radio/television",
          "radio/television",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "car (used)",
          "domestic appliances",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "(vacation - does not exist?)",
          "car (new)",
          "domestic appliances",
          "business",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "education",
          "domestic appliances",
          "domestic appliances",
          "radio/television",
          "radio/television",
          "domestic appliances",
          "car (used)",
          "radio/television",
          "domestic appliances",
          "radio/television",
          "car (new)",
          "car (new)",
          "car (used)",
          "furniture/equipment",
          "domestic appliances",
          "domestic appliances",
          "business",
          "car (used)",
          "car (used)",
          "car (used)",
          "business",
          "radio/television",
          "car (used)",
          "car (new)",
          "radio/television",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "car (new)",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "radio/television",
          "car (new)",
          "furniture/equipment",
          "radio/television",
          "radio/television",
          "car (new)",
          "car (new)",
          "radio/television",
          "radio/television",
          "radio/television",
          "(vacation - does not exist?)",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "radio/television",
          "car (new)",
          "car (new)",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "car (used)",
          "(vacation - does not exist?)",
          "car (new)",
          "car (used)",
          "radio/television",
          "radio/television",
          "domestic appliances",
          "repairs",
          "radio/television",
          "radio/television",
          "(vacation - does not exist?)",
          "radio/television",
          "domestic appliances",
          "business",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "business",
          "(vacation - does not exist?)",
          "repairs",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "(vacation - does not exist?)",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "radio/television",
          "(vacation - does not exist?)",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "radio/television",
          "business",
          "car (used)",
          "radio/television",
          "radio/television",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "radio/television",
          "car (new)",
          "furniture/equipment",
          "business",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "radio/television",
          "car (used)",
          "car (new)",
          "car (new)",
          "business",
          "domestic appliances",
          "domestic appliances",
          "radio/television",
          "business",
          "business",
          "car (new)",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "radio/television",
          "(vacation - does not exist?)",
          "radio/television",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "business",
          "business",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "business",
          "car (new)",
          "car (new)",
          "car (used)",
          "car (new)",
          "(vacation - does not exist?)",
          "car (new)",
          "car (new)",
          "car (new)",
          "car (used)",
          "car (new)",
          "radio/television",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "radio/television",
          "education",
          "business",
          "furniture/equipment",
          "radio/television",
          "education",
          "radio/television",
          "domestic appliances",
          "education",
          "car (new)",
          "education",
          "business",
          "car (new)",
          "radio/television",
          "furniture/equipment",
          "(vacation - does not exist?)",
          "radio/television",
          "(vacation - does not exist?)",
          "car (new)",
          "domestic appliances",
          "radio/television",
          "education",
          "car (used)",
          "domestic appliances",
          "radio/television",
          "car (used)",
          "car (new)",
          "car (used)",
          "car (new)",
          "car (used)",
          "repairs",
          "domestic appliances",
          "radio/television",
          "car (new)",
          "radio/television",
          "retraining",
          "business",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "business",
          "car (used)",
          "domestic appliances",
          "(vacation - does not exist?)",
          "car (new)",
          "retraining",
          "domestic appliances",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "business",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "radio/television",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "business",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "radio/television",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "car (used)",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "car (new)",
          "car (used)",
          "business",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "car (new)",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "education",
          "domestic appliances",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "car (used)",
          "(vacation - does not exist?)",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "(vacation - does not exist?)",
          "car (new)",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "(vacation - does not exist?)",
          "car (new)",
          "radio/television",
          "car (new)",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "radio/television",
          "car (new)",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "car (used)",
          "education",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "(vacation - does not exist?)",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "radio/television",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "business",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "radio/television",
          "domestic appliances",
          "car (used)",
          "business",
          "domestic appliances",
          "radio/television",
          "domestic appliances",
          "(vacation - does not exist?)",
          "car (new)",
          "retraining",
          "car (new)",
          "car (new)",
          "radio/television",
          "education",
          "car (new)",
          "radio/television",
          "car (new)",
          "radio/television",
          "repairs",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "business",
          "car (new)",
          "furniture/equipment",
          "car (new)",
          "car (new)",
          "business",
          "car (new)",
          "business",
          "domestic appliances",
          "radio/television",
          "(vacation - does not exist?)",
          "radio/television",
          "radio/television",
          "radio/television",
          "business",
          "domestic appliances",
          "domestic appliances",
          "car (used)",
          "repairs",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "radio/television",
          "business",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "car (new)",
          "business",
          "car (new)",
          "business",
          "radio/television",
          "domestic appliances",
          "domestic appliances",
          "radio/television",
          "car (new)",
          "radio/television",
          "(vacation - does not exist?)",
          "domestic appliances",
          "radio/television",
          "domestic appliances",
          "radio/television",
          "car (new)",
          "(vacation - does not exist?)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "(vacation - does not exist?)",
          "education",
          "(vacation - does not exist?)",
          "domestic appliances",
          "domestic appliances",
          "business",
          "radio/television",
          "car (new)",
          "car (new)",
          "(vacation - does not exist?)",
          "(vacation - does not exist?)",
          "radio/television",
          "car (new)",
          "car (new)",
          "car (used)",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "business",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "radio/television",
          "(vacation - does not exist?)",
          "furniture/equipment",
          "radio/television",
          "business",
          "car (new)",
          "domestic appliances",
          "business",
          "business",
          "car (new)",
          "car (new)",
          "business",
          "domestic appliances",
          "radio/television",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "(vacation - does not exist?)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "business",
          "car (new)",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "education",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "(vacation - does not exist?)",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "business",
          "business",
          "car (new)",
          "car (new)",
          "radio/television",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "(vacation - does not exist?)",
          "car (used)",
          "domestic appliances",
          "car (new)",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "car (used)",
          "domestic appliances",
          "(vacation - does not exist?)",
          "car (new)",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "business",
          "business",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "car (used)",
          "car (new)",
          "repairs",
          "car (used)",
          "car (new)",
          "car (new)",
          "business",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "radio/television",
          "radio/television",
          "business",
          "car (new)",
          "car (new)",
          "car (used)",
          "car (used)",
          "radio/television",
          "car (new)",
          "business",
          "domestic appliances",
          "education",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "car (new)",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "radio/television",
          "car (used)",
          "radio/television",
          "domestic appliances",
          "car (used)",
          "(vacation - does not exist?)",
          "car (used)",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "education",
          "domestic appliances",
          "car (new)",
          "retraining",
          "car (new)",
          "car (used)",
          "business",
          "domestic appliances",
          "car (used)",
          "(vacation - does not exist?)",
          "(vacation - does not exist?)",
          "business",
          "car (used)",
          "radio/television",
          "radio/television",
          "radio/television",
          "radio/television",
          "car (used)",
          "radio/television",
          "car (new)",
          "car (new)",
          "(vacation - does not exist?)",
          "domestic appliances",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "car (used)",
          "car (new)",
          "business",
          "domestic appliances",
          "car (used)",
          "repairs",
          "car (new)",
          "car (new)",
          "repairs",
          "domestic appliances",
          "furniture/equipment",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "radio/television",
          "car (new)",
          "radio/television",
          "car (new)",
          "car (new)",
          "business",
          "car (used)",
          "business",
          "business",
          "car (new)",
          "business",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "radio/television",
          "car (used)",
          "education",
          "business",
          "radio/television",
          "radio/television",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "car (used)",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "car (new)",
          "retraining",
          "radio/television",
          "car (new)",
          "car (new)",
          "car (used)",
          "business",
          "domestic appliances",
          "radio/television",
          "radio/television",
          "radio/television",
          "domestic appliances",
          "radio/television",
          "business",
          "radio/television",
          "radio/television",
          "car (new)",
          "business",
          "repairs",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "car (used)",
          "car (used)",
          "car (new)",
          "domestic appliances",
          "radio/television",
          "(vacation - does not exist?)",
          "business",
          "business",
          "car (new)",
          "car (used)",
          "business",
          "domestic appliances",
          "car (new)",
          "car (used)",
          "domestic appliances",
          "car (used)",
          "domestic appliances",
          "radio/television",
          "radio/television",
          "radio/television",
          "car (new)",
          "car (new)",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "(vacation - does not exist?)",
          "car (used)",
          "car (new)",
          "domestic appliances",
          "radio/television",
          "domestic appliances",
          "business",
          "business",
          "furniture/equipment",
          "car (used)",
          "car (new)",
          "radio/television",
          "radio/television",
          "radio/television",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "car (new)",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "(vacation - does not exist?)",
          "car (used)",
          "car (new)",
          "car (new)",
          "radio/television",
          "car (new)",
          "radio/television",
          "car (new)",
          "radio/television",
          "car (new)",
          "radio/television",
          "domestic appliances",
          "business",
          "business",
          "car (used)",
          "radio/television",
          "car (new)",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "radio/television",
          "domestic appliances",
          "car (new)",
          "car (new)",
          "domestic appliances",
          "education",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "car (new)",
          "education",
          "car (new)",
          "car (new)",
          "business",
          "domestic appliances",
          "domestic appliances",
          "domestic appliances",
          "business",
          "car (new)",
          "car (new)",
          "radio/television",
          "business",
          "car (new)",
          "car (used)",
          "radio/television",
          "radio/television",
          "business",
          "domestic appliances",
          "car (used)",
          "domestic appliances",
          "(vacation - does not exist?)",
          "domestic appliances",
          "domestic appliances",
          "radio/television",
          "car (new)",
          "radio/television",
          "car (used)",
          "domestic appliances",
          "domestic appliances",
          "car (used)"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(128, 0, 128, 1.0)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "savings",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          ".. >= 1000 DM ",
          "500 <= ... < 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          ".. >= 1000 DM ",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "100 <= ... < 500 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "100 <= ... < 500 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "unknown/ no savings account",
          ".. >= 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          ".. >= 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          ".. >= 1000 DM ",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "100 <= ... < 500 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "500 <= ... < 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "100 <= ... < 500 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "500 <= ... < 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          ".. >= 1000 DM ",
          "500 <= ... < 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          ".. >= 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "500 <= ... < 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "... < 100 DM",
          ".. >= 1000 DM ",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "unknown/ no savings account",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "500 <= ... < 1000 DM ",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM",
          "... < 100 DM",
          "... < 100 DM",
          "unknown/ no savings account",
          "100 <= ... < 500 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "unknown/ no savings account",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "... < 100 DM",
          "100 <= ... < 500 DM"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(219, 64, 82, 1.0)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "present_emp_since",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "unemployed",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "... < 1 year ",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "unemployed",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "unemployed",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "unemployed",
          "... < 1 year ",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "unemployed",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "unemployed",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "unemployed",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "unemployed",
          "unemployed",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "unemployed",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "unemployed",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "... < 1 year ",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "unemployed",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "unemployed",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "unemployed",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "unemployed",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "unemployed",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "unemployed",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "unemployed",
          "4 <= ... < 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "unemployed",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "unemployed",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "unemployed",
          "... < 1 year ",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "... < 1 year ",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "unemployed",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "... < 1 year ",
          "unemployed",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "... < 1 year ",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          "unemployed",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "... < 1 year ",
          "... < 1 year ",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "unemployed",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "unemployed",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          "unemployed",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "unemployed",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "unemployed",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "unemployed",
          "4 <= ... < 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "unemployed",
          "... < 1 year ",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "unemployed",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "unemployed",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "... < 1 year ",
          "... < 1 year ",
          "4 <= ... < 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "... < 1 year ",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "... < 1 year ",
          "... < 1 year ",
          "unemployed",
          "... < 1 year ",
          ".. >= 7 years",
          "unemployed",
          "4 <= ... < 7 years",
          "... < 1 year ",
          "unemployed",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "... < 1 year ",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "unemployed",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "unemployed",
          "1 <= ... < 4 years",
          "1 <= ... < 4 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          "... < 1 year ",
          "unemployed",
          "unemployed",
          ".. >= 7 years",
          "... < 1 year ",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "unemployed",
          ".. >= 7 years",
          "4 <= ... < 7 years",
          "1 <= ... < 4 years",
          ".. >= 7 years",
          "1 <= ... < 4 years",
          "unemployed"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(0, 128, 128, 1.0)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "personal_status_sex",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "male : married/widowed",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "male : single",
          "male : married/widowed",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "male : single",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "male : divorced/separated",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : divorced/separated",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "male : single",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : married/widowed",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : divorced/separated",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : married/widowed",
          "male : divorced/separated",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "male : single",
          "male : married/widowed",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : single",
          "male : divorced/separated",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : divorced/separated",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : married/widowed",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : married/widowed",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : married/widowed",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : married/widowed",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "male : divorced/separated",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "male : married/widowed",
          "male : married/widowed",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "male : single",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : divorced/separated",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : divorced/separated",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : married/widowed",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : divorced/separated",
          "male : single",
          "male : single",
          "male : married/widowed",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "male : married/widowed",
          "male : single",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "female : divorced/separated/married",
          "male : single",
          "male : single",
          "male : single",
          "male : single",
          "male : married/widowed",
          "male : single",
          "male : single",
          "female : divorced/separated/married",
          "male : divorced/separated",
          "male : single",
          "male : single",
          "male : single"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(255, 255, 51, 1.0)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "other_debtors",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "guarantor",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "co-applicant",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "guarantor",
          "none",
          "co-applicant",
          "co-applicant",
          "none",
          "none",
          "guarantor",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(128, 128, 0, 1.0)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "property",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "real estate",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "unknown / no property",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "unknown / no property",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "unknown / no property",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "real estate",
          "real estate",
          "real estate",
          "unknown / no property",
          "real estate",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "real estate",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "real estate",
          "real estate",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "unknown / no property",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "real estate",
          "unknown / no property",
          "unknown / no property",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "unknown / no property",
          "real estate",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "unknown / no property",
          "unknown / no property",
          "real estate",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "unknown / no property",
          "real estate",
          "unknown / no property",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "unknown / no property",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "unknown / no property",
          "real estate",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "unknown / no property",
          "real estate",
          "real estate",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "unknown / no property",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "real estate",
          "unknown / no property",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121/A122 : car or other, not in attribute 6",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "real estate",
          "if not A121 : building society savings agreement/ life insurance",
          "if not A121/A122 : car or other, not in attribute 6",
          "unknown / no property",
          "if not A121/A122 : car or other, not in attribute 6"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(251, 128, 114, 1.0)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "other_installment_plans",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "stores",
          "none",
          "none",
          "bank",
          "none",
          "bank",
          "stores",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "stores",
          "none",
          "stores",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "stores",
          "none",
          "bank",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "bank",
          "none",
          "bank",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "bank",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "bank",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "bank",
          "stores",
          "none",
          "bank",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "bank",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "bank",
          "bank",
          "none",
          "bank",
          "bank",
          "bank",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "stores",
          "stores",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "bank",
          "stores",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "stores",
          "none",
          "stores",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "bank",
          "none",
          "stores",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "stores",
          "none",
          "bank",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "bank",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "stores",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "bank",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(128, 177, 211, 1.0)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "housing",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "own",
          "own",
          "own",
          "for free",
          "for free",
          "for free",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "rent",
          "rent",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "rent",
          "for free",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "rent",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "for free",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "for free",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "rent",
          "for free",
          "for free",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "rent",
          "rent",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "for free",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "for free",
          "rent",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "for free",
          "for free",
          "rent",
          "own",
          "for free",
          "for free",
          "own",
          "own",
          "for free",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "rent",
          "rent",
          "own",
          "for free",
          "own",
          "own",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "for free",
          "for free",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "for free",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "rent",
          "own",
          "for free",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "rent",
          "for free",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "for free",
          "own",
          "for free",
          "own",
          "rent",
          "own",
          "own",
          "for free",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "for free",
          "rent",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "for free",
          "own",
          "for free",
          "own",
          "for free",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "rent",
          "for free",
          "for free",
          "own",
          "own",
          "for free",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "for free",
          "rent",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "rent",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "for free",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "rent",
          "rent",
          "for free",
          "rent",
          "own",
          "own",
          "for free",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "for free",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "for free",
          "for free",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "for free",
          "for free",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own",
          "for free",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "rent",
          "own",
          "rent",
          "own",
          "for free",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "for free",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "for free",
          "own",
          "own",
          "own",
          "rent",
          "own",
          "own",
          "own",
          "own",
          "own",
          "for free",
          "own"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(128, 177, 211, 0.8999999999999999)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "job",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "unemployed/ unskilled - non-resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "unemployed/ unskilled - non-resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "unemployed/ unskilled - non-resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "skilled employee / official",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "unskilled - resident",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "unskilled - resident",
          "unemployed/ unskilled - non-resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official",
          "management/ self-employed/ highly qualified employee/ officer",
          "unskilled - resident",
          "unskilled - resident",
          "unskilled - resident",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "unskilled - resident",
          "management/ self-employed/ highly qualified employee/ officer",
          "skilled employee / official",
          "skilled employee / official",
          "skilled employee / official"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(255, 153, 51, 0.8999999999999999)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "telephone",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "none",
          "none",
          "none",
          "none",
          "yes, registered under the customers name ",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none",
          "yes, registered under the customers name ",
          "none"
         ]
        },
        {
         "histfunc": "count",
         "histnorm": "",
         "marker": {
          "color": "rgba(55, 128, 191, 0.8999999999999999)",
          "line": {
           "color": "#4D5663",
           "width": 1.3
          }
         },
         "name": "foreign_worker",
         "opacity": 0.8,
         "orientation": "v",
         "type": "histogram",
         "x": [
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "no",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes",
          "yes"
         ]
        }
       ],
       "layout": {
        "barmode": "overlay",
        "legend": {
         "bgcolor": "#F5F6F9",
         "font": {
          "color": "#4D5663"
         }
        },
        "paper_bgcolor": "#F5F6F9",
        "plot_bgcolor": "#F5F6F9",
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "font": {
          "color": "#4D5663"
         }
        },
        "xaxis": {
         "gridcolor": "#E1E5ED",
         "showgrid": true,
         "tickfont": {
          "color": "#4D5663"
         },
         "title": {
          "font": {
           "color": "#4D5663"
          },
          "text": ""
         },
         "zerolinecolor": "#E1E5ED"
        },
        "yaxis": {
         "gridcolor": "#E1E5ED",
         "showgrid": true,
         "tickfont": {
          "color": "#4D5663"
         },
         "title": {
          "font": {
           "color": "#4D5663"
          },
          "text": ""
         },
         "zerolinecolor": "#E1E5ED"
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"0645302b-2287-4be5-810a-11f2d92cb9d1\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    window.PLOTLYENV.BASE_URL='https://plot.ly';\n",
       "                    \n",
       "                if (document.getElementById(\"0645302b-2287-4be5-810a-11f2d92cb9d1\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        '0645302b-2287-4be5-810a-11f2d92cb9d1',\n",
       "                        [{\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(255, 153, 51, 1.0)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"account_check_status\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"0 <= ... < 200 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \">= 200 DM / salary assignments for at least 1 year\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \">= 200 DM / salary assignments for at least 1 year\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"< 0 DM\", \"no checking account\", \"no checking account\", \"< 0 DM\", \"no checking account\", \"< 0 DM\", \"0 <= ... < 200 DM\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(55, 128, 191, 1.0)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"credit_history\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"delay in paying off in the past\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"all credits at this bank paid back duly\", \"delay in paying off in the past\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"delay in paying off in the past\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"delay in paying off in the past\", \"delay in paying off in the past\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"no credits taken/ all credits paid back duly\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"delay in paying off in the past\", \"no credits taken/ all credits paid back duly\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"no credits taken/ all credits paid back duly\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"all credits at this bank paid back duly\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"no credits taken/ all credits paid back duly\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"delay in paying off in the past\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"delay in paying off in the past\", \"delay in paying off in the past\", \"all credits at this bank paid back duly\", \"critical account/ other credits existing (not at this bank)\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"no credits taken/ all credits paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\", \"critical account/ other credits existing (not at this bank)\", \"all credits at this bank paid back duly\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"existing credits paid back duly till now\", \"critical account/ other credits existing (not at this bank)\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(50, 171, 96, 1.0)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"purpose\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"domestic appliances\", \"domestic appliances\", \"(vacation - does not exist?)\", \"radio/television\", \"car (new)\", \"(vacation - does not exist?)\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"business\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"business\", \"car (used)\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"car (new)\", \"car (used)\", \"radio/television\", \"radio/television\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"business\", \"business\", \"radio/television\", \"car (new)\", \"business\", \"radio/television\", \"domestic appliances\", \"(vacation - does not exist?)\", \"domestic appliances\", \"repairs\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"education\", \"car (used)\", \"car (used)\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"car (new)\", \"domestic appliances\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"car (used)\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"business\", \"domestic appliances\", \"business\", \"business\", \"domestic appliances\", \"education\", \"domestic appliances\", \"car (new)\", \"(vacation - does not exist?)\", \"domestic appliances\", \"car (used)\", \"domestic appliances\", \"furniture/equipment\", \"business\", \"(vacation - does not exist?)\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"car (used)\", \"radio/television\", \"domestic appliances\", \"domestic appliances\", \"business\", \"furniture/equipment\", \"domestic appliances\", \"business\", \"radio/television\", \"(vacation - does not exist?)\", \"car (new)\", \"education\", \"domestic appliances\", \"car (used)\", \"domestic appliances\", \"radio/television\", \"car (new)\", \"business\", \"(vacation - does not exist?)\", \"business\", \"domestic appliances\", \"car (used)\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"radio/television\", \"car (used)\", \"furniture/equipment\", \"car (new)\", \"car (new)\", \"radio/television\", \"business\", \"business\", \"(vacation - does not exist?)\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"radio/television\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"radio/television\", \"car (new)\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"education\", \"car (used)\", \"car (new)\", \"car (new)\", \"(vacation - does not exist?)\", \"radio/television\", \"radio/television\", \"domestic appliances\", \"domestic appliances\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"radio/television\", \"radio/television\", \"business\", \"car (new)\", \"car (new)\", \"radio/television\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"car (used)\", \"business\", \"radio/television\", \"education\", \"retraining\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"repairs\", \"car (new)\", \"car (new)\", \"radio/television\", \"radio/television\", \"radio/television\", \"radio/television\", \"business\", \"car (new)\", \"radio/television\", \"radio/television\", \"domestic appliances\", \"(vacation - does not exist?)\", \"car (used)\", \"radio/television\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"business\", \"business\", \"car (new)\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"car (new)\", \"domestic appliances\", \"radio/television\", \"business\", \"business\", \"business\", \"domestic appliances\", \"domestic appliances\", \"(vacation - does not exist?)\", \"domestic appliances\", \"radio/television\", \"car (used)\", \"radio/television\", \"(vacation - does not exist?)\", \"car (new)\", \"business\", \"retraining\", \"car (new)\", \"car (used)\", \"radio/television\", \"repairs\", \"business\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"business\", \"business\", \"domestic appliances\", \"retraining\", \"business\", \"domestic appliances\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"(vacation - does not exist?)\", \"domestic appliances\", \"business\", \"car (used)\", \"education\", \"domestic appliances\", \"radio/television\", \"domestic appliances\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"business\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"business\", \"retraining\", \"business\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"car (new)\", \"radio/television\", \"radio/television\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"car (used)\", \"domestic appliances\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"(vacation - does not exist?)\", \"car (new)\", \"domestic appliances\", \"business\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"education\", \"domestic appliances\", \"domestic appliances\", \"radio/television\", \"radio/television\", \"domestic appliances\", \"car (used)\", \"radio/television\", \"domestic appliances\", \"radio/television\", \"car (new)\", \"car (new)\", \"car (used)\", \"furniture/equipment\", \"domestic appliances\", \"domestic appliances\", \"business\", \"car (used)\", \"car (used)\", \"car (used)\", \"business\", \"radio/television\", \"car (used)\", \"car (new)\", \"radio/television\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"car (new)\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"radio/television\", \"car (new)\", \"furniture/equipment\", \"radio/television\", \"radio/television\", \"car (new)\", \"car (new)\", \"radio/television\", \"radio/television\", \"radio/television\", \"(vacation - does not exist?)\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"radio/television\", \"car (new)\", \"car (new)\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"car (used)\", \"(vacation - does not exist?)\", \"car (new)\", \"car (used)\", \"radio/television\", \"radio/television\", \"domestic appliances\", \"repairs\", \"radio/television\", \"radio/television\", \"(vacation - does not exist?)\", \"radio/television\", \"domestic appliances\", \"business\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"business\", \"(vacation - does not exist?)\", \"repairs\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"(vacation - does not exist?)\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"radio/television\", \"(vacation - does not exist?)\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"radio/television\", \"business\", \"car (used)\", \"radio/television\", \"radio/television\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"radio/television\", \"car (new)\", \"furniture/equipment\", \"business\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"radio/television\", \"car (used)\", \"car (new)\", \"car (new)\", \"business\", \"domestic appliances\", \"domestic appliances\", \"radio/television\", \"business\", \"business\", \"car (new)\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"radio/television\", \"(vacation - does not exist?)\", \"radio/television\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"business\", \"business\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"business\", \"car (new)\", \"car (new)\", \"car (used)\", \"car (new)\", \"(vacation - does not exist?)\", \"car (new)\", \"car (new)\", \"car (new)\", \"car (used)\", \"car (new)\", \"radio/television\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"radio/television\", \"education\", \"business\", \"furniture/equipment\", \"radio/television\", \"education\", \"radio/television\", \"domestic appliances\", \"education\", \"car (new)\", \"education\", \"business\", \"car (new)\", \"radio/television\", \"furniture/equipment\", \"(vacation - does not exist?)\", \"radio/television\", \"(vacation - does not exist?)\", \"car (new)\", \"domestic appliances\", \"radio/television\", \"education\", \"car (used)\", \"domestic appliances\", \"radio/television\", \"car (used)\", \"car (new)\", \"car (used)\", \"car (new)\", \"car (used)\", \"repairs\", \"domestic appliances\", \"radio/television\", \"car (new)\", \"radio/television\", \"retraining\", \"business\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"business\", \"car (used)\", \"domestic appliances\", \"(vacation - does not exist?)\", \"car (new)\", \"retraining\", \"domestic appliances\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"business\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"radio/television\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"business\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"radio/television\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"car (used)\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"car (new)\", \"car (used)\", \"business\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"car (new)\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"education\", \"domestic appliances\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"car (used)\", \"(vacation - does not exist?)\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"(vacation - does not exist?)\", \"car (new)\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"(vacation - does not exist?)\", \"car (new)\", \"radio/television\", \"car (new)\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"radio/television\", \"car (new)\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"car (used)\", \"education\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"(vacation - does not exist?)\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"radio/television\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"business\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"radio/television\", \"domestic appliances\", \"car (used)\", \"business\", \"domestic appliances\", \"radio/television\", \"domestic appliances\", \"(vacation - does not exist?)\", \"car (new)\", \"retraining\", \"car (new)\", \"car (new)\", \"radio/television\", \"education\", \"car (new)\", \"radio/television\", \"car (new)\", \"radio/television\", \"repairs\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"business\", \"car (new)\", \"furniture/equipment\", \"car (new)\", \"car (new)\", \"business\", \"car (new)\", \"business\", \"domestic appliances\", \"radio/television\", \"(vacation - does not exist?)\", \"radio/television\", \"radio/television\", \"radio/television\", \"business\", \"domestic appliances\", \"domestic appliances\", \"car (used)\", \"repairs\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"radio/television\", \"business\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"car (new)\", \"business\", \"car (new)\", \"business\", \"radio/television\", \"domestic appliances\", \"domestic appliances\", \"radio/television\", \"car (new)\", \"radio/television\", \"(vacation - does not exist?)\", \"domestic appliances\", \"radio/television\", \"domestic appliances\", \"radio/television\", \"car (new)\", \"(vacation - does not exist?)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"(vacation - does not exist?)\", \"education\", \"(vacation - does not exist?)\", \"domestic appliances\", \"domestic appliances\", \"business\", \"radio/television\", \"car (new)\", \"car (new)\", \"(vacation - does not exist?)\", \"(vacation - does not exist?)\", \"radio/television\", \"car (new)\", \"car (new)\", \"car (used)\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"business\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"radio/television\", \"(vacation - does not exist?)\", \"furniture/equipment\", \"radio/television\", \"business\", \"car (new)\", \"domestic appliances\", \"business\", \"business\", \"car (new)\", \"car (new)\", \"business\", \"domestic appliances\", \"radio/television\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"(vacation - does not exist?)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"business\", \"car (new)\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"education\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"(vacation - does not exist?)\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"business\", \"business\", \"car (new)\", \"car (new)\", \"radio/television\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"(vacation - does not exist?)\", \"car (used)\", \"domestic appliances\", \"car (new)\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"car (used)\", \"domestic appliances\", \"(vacation - does not exist?)\", \"car (new)\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"business\", \"business\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"car (used)\", \"car (new)\", \"repairs\", \"car (used)\", \"car (new)\", \"car (new)\", \"business\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"radio/television\", \"radio/television\", \"business\", \"car (new)\", \"car (new)\", \"car (used)\", \"car (used)\", \"radio/television\", \"car (new)\", \"business\", \"domestic appliances\", \"education\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"car (new)\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"radio/television\", \"car (used)\", \"radio/television\", \"domestic appliances\", \"car (used)\", \"(vacation - does not exist?)\", \"car (used)\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"education\", \"domestic appliances\", \"car (new)\", \"retraining\", \"car (new)\", \"car (used)\", \"business\", \"domestic appliances\", \"car (used)\", \"(vacation - does not exist?)\", \"(vacation - does not exist?)\", \"business\", \"car (used)\", \"radio/television\", \"radio/television\", \"radio/television\", \"radio/television\", \"car (used)\", \"radio/television\", \"car (new)\", \"car (new)\", \"(vacation - does not exist?)\", \"domestic appliances\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"car (used)\", \"car (new)\", \"business\", \"domestic appliances\", \"car (used)\", \"repairs\", \"car (new)\", \"car (new)\", \"repairs\", \"domestic appliances\", \"furniture/equipment\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"radio/television\", \"car (new)\", \"radio/television\", \"car (new)\", \"car (new)\", \"business\", \"car (used)\", \"business\", \"business\", \"car (new)\", \"business\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"radio/television\", \"car (used)\", \"education\", \"business\", \"radio/television\", \"radio/television\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"car (used)\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"car (new)\", \"retraining\", \"radio/television\", \"car (new)\", \"car (new)\", \"car (used)\", \"business\", \"domestic appliances\", \"radio/television\", \"radio/television\", \"radio/television\", \"domestic appliances\", \"radio/television\", \"business\", \"radio/television\", \"radio/television\", \"car (new)\", \"business\", \"repairs\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"car (used)\", \"car (used)\", \"car (new)\", \"domestic appliances\", \"radio/television\", \"(vacation - does not exist?)\", \"business\", \"business\", \"car (new)\", \"car (used)\", \"business\", \"domestic appliances\", \"car (new)\", \"car (used)\", \"domestic appliances\", \"car (used)\", \"domestic appliances\", \"radio/television\", \"radio/television\", \"radio/television\", \"car (new)\", \"car (new)\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"(vacation - does not exist?)\", \"car (used)\", \"car (new)\", \"domestic appliances\", \"radio/television\", \"domestic appliances\", \"business\", \"business\", \"furniture/equipment\", \"car (used)\", \"car (new)\", \"radio/television\", \"radio/television\", \"radio/television\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"car (new)\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"(vacation - does not exist?)\", \"car (used)\", \"car (new)\", \"car (new)\", \"radio/television\", \"car (new)\", \"radio/television\", \"car (new)\", \"radio/television\", \"car (new)\", \"radio/television\", \"domestic appliances\", \"business\", \"business\", \"car (used)\", \"radio/television\", \"car (new)\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"radio/television\", \"domestic appliances\", \"car (new)\", \"car (new)\", \"domestic appliances\", \"education\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"car (new)\", \"education\", \"car (new)\", \"car (new)\", \"business\", \"domestic appliances\", \"domestic appliances\", \"domestic appliances\", \"business\", \"car (new)\", \"car (new)\", \"radio/television\", \"business\", \"car (new)\", \"car (used)\", \"radio/television\", \"radio/television\", \"business\", \"domestic appliances\", \"car (used)\", \"domestic appliances\", \"(vacation - does not exist?)\", \"domestic appliances\", \"domestic appliances\", \"radio/television\", \"car (new)\", \"radio/television\", \"car (used)\", \"domestic appliances\", \"domestic appliances\", \"car (used)\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(128, 0, 128, 1.0)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"savings\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \".. >= 1000 DM \", \"... < 100 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"unknown/ no savings account\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \".. >= 1000 DM \", \"500 <= ... < 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \".. >= 1000 DM \", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"100 <= ... < 500 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"100 <= ... < 500 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"unknown/ no savings account\", \".. >= 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \".. >= 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \".. >= 1000 DM \", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \".. >= 1000 DM \", \"... < 100 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"100 <= ... < 500 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"500 <= ... < 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"100 <= ... < 500 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \".. >= 1000 DM \", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"500 <= ... < 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \".. >= 1000 DM \", \"500 <= ... < 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \".. >= 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \".. >= 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"500 <= ... < 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"... < 100 DM\", \".. >= 1000 DM \", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"unknown/ no savings account\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"500 <= ... < 1000 DM \", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\", \"... < 100 DM\", \"... < 100 DM\", \"unknown/ no savings account\", \"100 <= ... < 500 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"unknown/ no savings account\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"... < 100 DM\", \"100 <= ... < 500 DM\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(219, 64, 82, 1.0)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"present_emp_since\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"unemployed\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"... < 1 year \", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"unemployed\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"unemployed\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"unemployed\", \"... < 1 year \", \"4 <= ... < 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"unemployed\", \"1 <= ... < 4 years\", \"... < 1 year \", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"unemployed\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"unemployed\", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"unemployed\", \"unemployed\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"unemployed\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"unemployed\", \"4 <= ... < 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"... < 1 year \", \"... < 1 year \", \"4 <= ... < 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \"... < 1 year \", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"unemployed\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"... < 1 year \", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"unemployed\", \"... < 1 year \", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"... < 1 year \", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"... < 1 year \", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"unemployed\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"unemployed\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"unemployed\", \"4 <= ... < 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"unemployed\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"unemployed\", \"4 <= ... < 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"... < 1 year \", \".. >= 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"unemployed\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"unemployed\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"unemployed\", \"... < 1 year \", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \"... < 1 year \", \"... < 1 year \", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \"unemployed\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"... < 1 year \", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"... < 1 year \", \"unemployed\", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \".. >= 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"... < 1 year \", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \"unemployed\", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"... < 1 year \", \"... < 1 year \", \".. >= 7 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"unemployed\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"unemployed\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \"unemployed\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"... < 1 year \", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"unemployed\", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"... < 1 year \", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"unemployed\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"unemployed\", \"4 <= ... < 7 years\", \"... < 1 year \", \".. >= 7 years\", \"unemployed\", \"... < 1 year \", \"... < 1 year \", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"unemployed\", \"4 <= ... < 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"unemployed\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"4 <= ... < 7 years\", \"... < 1 year \", \"... < 1 year \", \"... < 1 year \", \"4 <= ... < 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"... < 1 year \", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"4 <= ... < 7 years\", \"... < 1 year \", \"... < 1 year \", \"... < 1 year \", \"unemployed\", \"... < 1 year \", \".. >= 7 years\", \"unemployed\", \"4 <= ... < 7 years\", \"... < 1 year \", \"unemployed\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"... < 1 year \", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"unemployed\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"unemployed\", \"1 <= ... < 4 years\", \"1 <= ... < 4 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \"... < 1 year \", \"unemployed\", \"unemployed\", \".. >= 7 years\", \"... < 1 year \", \".. >= 7 years\", \"4 <= ... < 7 years\", \"unemployed\", \".. >= 7 years\", \"4 <= ... < 7 years\", \"1 <= ... < 4 years\", \".. >= 7 years\", \"1 <= ... < 4 years\", \"unemployed\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(0, 128, 128, 1.0)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"personal_status_sex\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"male : married/widowed\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"male : single\", \"male : married/widowed\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"male : single\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"male : divorced/separated\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : divorced/separated\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"male : single\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : married/widowed\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : divorced/separated\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : married/widowed\", \"male : divorced/separated\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"male : single\", \"male : married/widowed\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : single\", \"male : divorced/separated\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : divorced/separated\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : married/widowed\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : married/widowed\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : married/widowed\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : married/widowed\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"male : divorced/separated\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"male : married/widowed\", \"male : married/widowed\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"male : single\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : divorced/separated\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : divorced/separated\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : married/widowed\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : divorced/separated\", \"male : single\", \"male : single\", \"male : married/widowed\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"male : married/widowed\", \"male : single\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"female : divorced/separated/married\", \"male : single\", \"male : single\", \"male : single\", \"male : single\", \"male : married/widowed\", \"male : single\", \"male : single\", \"female : divorced/separated/married\", \"male : divorced/separated\", \"male : single\", \"male : single\", \"male : single\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(255, 255, 51, 1.0)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"other_debtors\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"guarantor\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"co-applicant\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"guarantor\", \"none\", \"co-applicant\", \"co-applicant\", \"none\", \"none\", \"guarantor\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(128, 128, 0, 1.0)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"property\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"real estate\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"unknown / no property\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"unknown / no property\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"unknown / no property\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"real estate\", \"real estate\", \"real estate\", \"unknown / no property\", \"real estate\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"real estate\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"real estate\", \"real estate\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"unknown / no property\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"real estate\", \"unknown / no property\", \"unknown / no property\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"unknown / no property\", \"real estate\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"unknown / no property\", \"unknown / no property\", \"real estate\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"unknown / no property\", \"real estate\", \"unknown / no property\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"unknown / no property\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"unknown / no property\", \"real estate\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"unknown / no property\", \"real estate\", \"real estate\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"unknown / no property\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"real estate\", \"unknown / no property\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121/A122 : car or other, not in attribute 6\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"real estate\", \"if not A121 : building society savings agreement/ life insurance\", \"if not A121/A122 : car or other, not in attribute 6\", \"unknown / no property\", \"if not A121/A122 : car or other, not in attribute 6\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(251, 128, 114, 1.0)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"other_installment_plans\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"stores\", \"none\", \"none\", \"bank\", \"none\", \"bank\", \"stores\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"stores\", \"none\", \"stores\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"stores\", \"none\", \"bank\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"bank\", \"none\", \"bank\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"bank\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"bank\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"bank\", \"stores\", \"none\", \"bank\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"bank\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"bank\", \"bank\", \"none\", \"bank\", \"bank\", \"bank\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"stores\", \"stores\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"bank\", \"stores\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"stores\", \"none\", \"stores\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"bank\", \"none\", \"stores\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"stores\", \"none\", \"bank\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"bank\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"stores\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"bank\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(128, 177, 211, 1.0)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"housing\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"own\", \"own\", \"own\", \"for free\", \"for free\", \"for free\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"rent\", \"rent\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"rent\", \"for free\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"rent\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"for free\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"for free\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"rent\", \"for free\", \"for free\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"rent\", \"rent\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"for free\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"for free\", \"rent\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"for free\", \"for free\", \"rent\", \"own\", \"for free\", \"for free\", \"own\", \"own\", \"for free\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"rent\", \"rent\", \"own\", \"for free\", \"own\", \"own\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"for free\", \"for free\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"for free\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"rent\", \"own\", \"for free\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"rent\", \"for free\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"for free\", \"own\", \"for free\", \"own\", \"rent\", \"own\", \"own\", \"for free\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"for free\", \"rent\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"for free\", \"own\", \"for free\", \"own\", \"for free\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"rent\", \"for free\", \"for free\", \"own\", \"own\", \"for free\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"for free\", \"rent\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"rent\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"for free\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"rent\", \"rent\", \"for free\", \"rent\", \"own\", \"own\", \"for free\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"for free\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"for free\", \"for free\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"for free\", \"for free\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\", \"for free\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"rent\", \"own\", \"rent\", \"own\", \"for free\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"for free\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"for free\", \"own\", \"own\", \"own\", \"rent\", \"own\", \"own\", \"own\", \"own\", \"own\", \"for free\", \"own\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(128, 177, 211, 0.8999999999999999)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"job\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"unemployed/ unskilled - non-resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"unemployed/ unskilled - non-resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"unemployed/ unskilled - non-resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"skilled employee / official\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"unskilled - resident\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"unskilled - resident\", \"unemployed/ unskilled - non-resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\", \"management/ self-employed/ highly qualified employee/ officer\", \"unskilled - resident\", \"unskilled - resident\", \"unskilled - resident\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"unskilled - resident\", \"management/ self-employed/ highly qualified employee/ officer\", \"skilled employee / official\", \"skilled employee / official\", \"skilled employee / official\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(255, 153, 51, 0.8999999999999999)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"telephone\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"none\", \"none\", \"none\", \"none\", \"yes, registered under the customers name \", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\", \"yes, registered under the customers name \", \"none\"]}, {\"histfunc\": \"count\", \"histnorm\": \"\", \"marker\": {\"color\": \"rgba(55, 128, 191, 0.8999999999999999)\", \"line\": {\"color\": \"#4D5663\", \"width\": 1.3}}, \"name\": \"foreign_worker\", \"opacity\": 0.8, \"orientation\": \"v\", \"type\": \"histogram\", \"x\": [\"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"]}],\n",
       "                        {\"barmode\": \"overlay\", \"legend\": {\"bgcolor\": \"#F5F6F9\", \"font\": {\"color\": \"#4D5663\"}}, \"paper_bgcolor\": \"#F5F6F9\", \"plot_bgcolor\": \"#F5F6F9\", \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"font\": {\"color\": \"#4D5663\"}}, \"xaxis\": {\"gridcolor\": \"#E1E5ED\", \"showgrid\": true, \"tickfont\": {\"color\": \"#4D5663\"}, \"title\": {\"font\": {\"color\": \"#4D5663\"}, \"text\": \"\"}, \"zerolinecolor\": \"#E1E5ED\"}, \"yaxis\": {\"gridcolor\": \"#E1E5ED\", \"showgrid\": true, \"tickfont\": {\"color\": \"#4D5663\"}, \"title\": {\"font\": {\"color\": \"#4D5663\"}, \"text\": \"\"}, \"zerolinecolor\": \"#E1E5ED\"}},\n",
       "                        {\"showLink\": true, \"linkText\": \"Export to plot.ly\", \"plotlyServerURL\": \"https://plot.ly\", \"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('0645302b-2287-4be5-810a-11f2d92cb9d1');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "input_data[categorical_cols].iplot(kind ='hist')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAagAAAEYCAYAAAAJeGK1AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjAsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+17YcXAAAZx0lEQVR4nO3df7RdZX3n8fdHAmagSAgGRrjBxBJFMkICUakUhharklKCVSpMW4KkjVW0uNrRUmetolhX7cDUolhtprSGDgNFKRAdoDJBWzqUH4ki0CAlQCVXUghRAQsRE77zx9kXL8kluUnuztk3eb/Wuuvs/exn7/O9a13y4dnnOc9OVSFJUte8pN8FSJI0EgNKktRJBpQkqZMMKElSJxlQkqROMqAkSZ3UWkAleU2SO4f9PJnkg0kmJ7kxyf3N675N/yT5dJKVSe5KcmRbtUmSuq+1gKqq+6pqVlXNAo4CngauBs4FllbVDGBpsw9wIjCj+VkIfK6t2iRJ3bejbvGdADxQVd8B5gGLm/bFwCnN9jzg0uq5FZiU5BU7qD5JUsdM2EHvcxpwebN9QFWtBqiq1Un2b9oPAlYNO2ewaVs9/EJJFtIbYbHXXnsddeihh7ZZtySpZcuXL3+8qqZs3N56QCXZAzgZ+P0tdR2hbZN1mKpqEbAIYM6cObVs2bLtrlGS1D9JvjNS+464xXci8I2qerTZf3To1l3z+ljTPghMHXbeAPDIDqhPktRBOyKgTucnt/cAlgDzm+35wLXD2s9oZvMdDTwxdCtQkrTrafUWX5I9gV8A3jOs+ZPAlUkWAA8Dpzbt1wFzgZX0Zvy9u83aJEnd1mpAVdXTwH4bta2lN6tv474FnN1mPZK0s/nxj3/M4OAg69at63cpWzRx4kQGBgbYfffdR9V/R83ikyS1YHBwkL333ptp06aRjDTXrBuqirVr1zI4OMj06dNHdY5LHUnSOLZu3Tr222+/TocTQBL222+/rRrpGVCSNM51PZyGbG2dBpQkqZMMKEnayX30ox/lwgsvfNHja9as4Y1vfCOzZ8/m5ptv3urrf+ELX+D9738/ANdccw0rVqzY5lqHc5JE46gPXdrvEsaF5Rec0e8SJI2xpUuXcuihh7J48eItd96Ca665hpNOOonDDjtsu6/lCEqSdkKf+MQneM1rXsOb3/xm7rvvPgAeeOAB3va2t3HUUUdx7LHH8u1vf5s777yTD3/4w1x33XXMmjWLZ555hve+973MmTOHmTNnct555z1/zWnTpvH4448DsGzZMo4//vgXvOctt9zCkiVL+NCHPsSsWbN44IEHtut3cAQlSTuZ5cuXc8UVV/DNb36T9evXc+SRR3LUUUexcOFCPv/5zzNjxgxuu+023ve+93HTTTdx/vnns2zZMi6++GKgF26TJ09mw4YNnHDCCdx1110cfvjhW3zfN73pTZx88smcdNJJvPOd79zu38OAkqSdzM0338zb3/529txzTwBOPvlk1q1bxy233MKpp576fL8f/ehHI55/5ZVXsmjRItavX8/q1atZsWLFqAJqrBlQkrQT2nhK93PPPcekSZO48847N3veQw89xIUXXsgdd9zBvvvuy5lnnvn8d5cmTJjAc889B7BDVq7wMyhJ2skcd9xxXH311TzzzDM89dRTfPnLX2bPPfdk+vTpfPGLXwR6Kzt861vf2uTcJ598kr322ot99tmHRx99lOuvv/75Y9OmTWP58uUAXHXVVSO+9957781TTz01Jr+HASVJO5kjjzySd73rXcyaNYt3vOMdHHvssQBcdtllXHLJJRxxxBHMnDmTa6+9dpNzjzjiCGbPns3MmTM566yzOOaYY54/dt5553HOOedw7LHHsttuu4343qeddhoXXHABs2fP3u5JEumt0To+jeUDC51mPjpOM5e65d577+W1r31tv8sYtZHqTbK8quZs3NcRlCSpkwwoSVInGVCSpE4yoCRJnWRASZI6yYCSJHWSK0lI0k5mrL82M5qvl9xwww2cc845bNiwgd/4jd/g3HPP3e73dQQlSdouGzZs4Oyzz+b6669nxYoVXH755WPyTCgDSpK0XW6//XYOOeQQXvWqV7HHHntw2mmnjbhKxdYyoCRJ2+W73/0uU6dOfX5/YGCA7373u9t93VYDKsmkJF9K8u0k9yb5mSSTk9yY5P7mdd+mb5J8OsnKJHclObLN2iRJY2OkJfM2Xk19W7Q9groIuKGqDgWOAO4FzgWWVtUMYGmzD3AiMKP5WQh8ruXaJEljYGBggFWrVj2/Pzg4yIEHHrjd120toJK8DDgOuASgqp6tqh8A84ChB98vBk5ptucBl1bPrcCkJK9oqz5J0th4/etfz/33389DDz3Es88+yxVXXMHJJ5+83ddtc5r5q4A1wF8lOQJYDpwDHFBVqwGqanWS/Zv+BwGrhp0/2LStHn7RJAvpjbA4+OCDWyxfksanHf3UgQkTJnDxxRfz1re+lQ0bNnDWWWcxc+bM7b/uGNS2uWsfCXygqm5LchE/uZ03kpFuWG5yY7OqFgGLoPe4jbEoVJK0febOncvcuXPH9JptfgY1CAxW1W3N/pfoBdajQ7fumtfHhvWfOuz8AeCRFuuTJHVYawFVVf8GrErymqbpBGAFsASY37TNB4Ymyy8Bzmhm8x0NPDF0K1CStOtpe6mjDwCXJdkDeBB4N71QvDLJAuBh4NSm73XAXGAl8HTTV5K0i2o1oKrqTmCTx/jSG01t3LeAs9usR5I0friShCSpkwwoSVIn+bgNSdrJPHz+68b0egf/wd1b7HPWWWfxla98hf3335977rlnTN7XEZQkabudeeaZ3HDDDWN6TQNKkrTdjjvuOCZPnjym1zSgJEmdZEBJkjrJgJIkdZIBJUnqJKeZS9JOZjTTwsfa6aefzte//nUef/xxBgYG+NjHPsaCBQu265oGlCRpu11++eVjfk1v8UmSOsmAkiR1kgElSeNc72EQ3be1dRpQkjSOTZw4kbVr13Y+pKqKtWvXMnHixFGf4yQJSRrHBgYGGBwcZM2aNf0uZYsmTpzIwMDAqPsbUJI0ju2+++5Mnz6932W0wlt8kqROMqAkSZ1kQEmSOsmAkiR1kgElSeokA0qS1EmtBlSSf01yd5I7kyxr2iYnuTHJ/c3rvk17knw6ycokdyU5ss3aJEndtiNGUD9XVbOqak6zfy6wtKpmAEubfYATgRnNz0LgczugNklSR/XjFt88YHGzvRg4ZVj7pdVzKzApySv6UJ8kqQPaDqgCvppkeZKFTdsBVbUaoHndv2k/CFg17NzBpu0FkixMsizJsvGwtIckadu0vdTRMVX1SJL9gRuTfHszfTNC2yarH1bVImARwJw5c7q9OqIkaZu1OoKqqkea18eAq4E3AI8O3bprXh9rug8CU4edPgA80mZ9kqTuai2gkuyVZO+hbeAtwD3AEmB+020+cG2zvQQ4o5nNdzTwxNCtQEnSrqfNW3wHAFcnGXqf/11VNyS5A7gyyQLgYeDUpv91wFxgJfA08O4Wa5MkdVxrAVVVDwJHjNC+FjhhhPYCzm6rHknS+OJKEpKkTjKgJEmdZEBJkjrJgJIkdZIBJUnqJANKktRJBpQkqZMMKElSJxlQkqROMqAkSZ1kQEmSOsmAkiR1kgElSeokA0qS1EkGlCSpkwwoSVInGVCSpE4yoCRJnWRASZI6yYCSJHWSASVJ6iQDSpLUSQaUJKmTWg+oJLsl+WaSrzT705PcluT+JH+TZI+m/aXN/srm+LS2a5MkddeOGEGdA9w7bP+PgU9V1Qzg+8CCpn0B8P2qOgT4VNNPkrSLajWgkgwAvwj8RbMf4OeBLzVdFgOnNNvzmn2a4yc0/SVJu6C2R1B/CnwYeK7Z3w/4QVWtb/YHgYOa7YOAVQDN8Sea/i+QZGGSZUmWrVmzps3aJUl91FpAJTkJeKyqlg9vHqFrjeLYTxqqFlXVnKqaM2XKlDGoVJLURRNavPYxwMlJ5gITgZfRG1FNSjKhGSUNAI80/QeBqcBgkgnAPsD3WqxPktRhrY2gqur3q2qgqqYBpwE3VdWvAl8D3tl0mw9c22wvafZpjt9UVZuMoCRJu4Z+fA/q94DfSbKS3mdMlzTtlwD7Ne2/A5zbh9okSR0xqlt8SZZW1QlbansxVfV14OvN9oPAG0bosw44dTTXkyTt/DYbUEkmAnsCL0+yLz+ZyPAy4MCWa5Mk7cK2NIJ6D/BBemG0nJ8E1JPAZ1usS5K0i9tsQFXVRcBFST5QVZ/ZQTVJkjS6z6Cq6jNJ3gRMG35OVV3aUl2SpF3caCdJ/DXw08CdwIamuQADSpLUitF+UXcOcJjfS5Ik7Sij/R7UPcB/bLMQSZKGG+0I6uXAiiS3Az8aaqyqk1upSpK0yxttQH20zSIkSdrYaGfx/X3bhUiSNNxoZ/E9xU8efbEHsDvw71X1srYKkyTt2kY7gtp7+H6SUxhhPT1JksbKNq1mXlXX0Ht0uyRJrRjtLb5fHrb7Enrfi/I7UZKk1ox2Ft8vDdteD/wrMG/Mq5EkqTHaz6De3XYhkiQNN6rPoJIMJLk6yWNJHk1yVZKBtouTJO26RjtJ4q+AJfSeC3UQ8OWmTZKkVow2oKZU1V9V1frm5wvAlBbrkiTt4kYbUI8n+bUkuzU/vwasbbMwSdKubbQBdRbwK8C/AauBdwJOnJAktWa008w/Dsyvqu8DJJkMXEgvuCRJGnOjHUEdPhROAFX1PWB2OyVJkjT6gHpJkn2HdpoR1GZHX0kmJrk9ybeS/HOSjzXt05PcluT+JH+TZI+m/aXN/srm+LRt+5UkSTuD0QbU/wBuSfLxJOcDtwD/fQvn/Aj4+ao6ApgFvC3J0cAfA5+qqhnA94EFTf8FwPer6hDgU00/SdIualQBVVWXAu8AHgXWAL9cVX+9hXOqqn7Y7O7e/BS9RWa/1LQvBk5ptuc1+zTHT0iSUf4ekqSdzGgnSVBVK4AVW3PxJLsBy4FDgM8CDwA/qKr1TZdBel/8pXld1bzX+iRPAPsBj290zYXAQoCDDz54a8qRJI0jow6obVFVG4BZSSYBVwOvHalb8zrSaGmTFdOrahGwCGDOnDmuqL6DPXz+6/pdwrhw8B/c3e8SpHFvm54HtbWq6gfA14GjgUlJhoJxAHik2R4EpgI0x/cBvrcj6pMkdU9rAZVkSjNyIsl/AN4M3At8jd4XfQHmA9c220uafZrjN1WVIyRJ2kW1eYvvFcDi5nOolwBXVtVXkqwArkjyh8A3gUua/pcAf51kJb2R02kt1iZJ6rjWAqqq7mKEL/NW1YPAG0ZoXwec2lY9kqTxZYd8BiVJ0tYyoCRJnWRASZI6yYCSJHWSASVJ6iQDSpLUSQaUJKmTDChJUicZUJKkTjKgJEmdZEBJkjrJgJIkdZIBJUnqJANKktRJBpQkqZMMKElSJxlQkqROMqAkSZ1kQEmSOsmAkiR1kgElSeokA0qS1EkGlCSpk1oLqCRTk3wtyb1J/jnJOU375CQ3Jrm/ed23aU+STydZmeSuJEe2VZskqfvaHEGtB363ql4LHA2cneQw4FxgaVXNAJY2+wAnAjOan4XA51qsTZLUca0FVFWtrqpvNNtPAfcCBwHzgMVNt8XAKc32PODS6rkVmJTkFW3VJ0nqth3yGVSSacBs4DbggKpaDb0QA/Zvuh0ErBp22mDTtvG1FiZZlmTZmjVr2ixbktRHrQdUkp8CrgI+WFVPbq7rCG21SUPVoqqaU1VzpkyZMlZlSpI6ptWASrI7vXC6rKr+tml+dOjWXfP6WNM+CEwddvoA8Eib9UmSuqvNWXwBLgHurao/GXZoCTC/2Z4PXDus/YxmNt/RwBNDtwIlSbueCS1e+xjg14G7k9zZtH0E+CRwZZIFwMPAqc2x64C5wErgaeDdLdYmSeq41gKqqv6RkT9XAjhhhP4FnN1WPZKk8cWVJCRJnWRASZI6yYCSJHWSASVJ6iQDSpLUSQaUJKmTDChJUicZUJKkTjKgJEmdZEBJkjrJgJIkdZIBJUnqJANKktRJBpQkqZMMKElSJxlQkqROMqAkSZ1kQEmSOsmAkiR1kgElSeokA0qS1EkGlCSpkwwoSVIntRZQSf4yyWNJ7hnWNjnJjUnub173bdqT5NNJVia5K8mRbdUlSRof2hxBfQF420Zt5wJLq2oGsLTZBzgRmNH8LAQ+12JdkqRxoLWAqqp/AL63UfM8YHGzvRg4ZVj7pdVzKzApySvaqk2S1H07+jOoA6pqNUDzun/TfhCwali/waZtE0kWJlmWZNmaNWtaLVaS1D9dmSSREdpqpI5Vtaiq5lTVnClTprRcliSpX3Z0QD06dOuueX2saR8Epg7rNwA8soNrkyR1yI4OqCXA/GZ7PnDtsPYzmtl8RwNPDN0KlCTtmia0deEklwPHAy9PMgicB3wSuDLJAuBh4NSm+3XAXGAl8DTw7rbqkiSND60FVFWd/iKHThihbwFnt1WLJGn86cokCUmSXsCAkiR1kgElSeokA0qS1EkGlCSpkwwoSVInGVCSpE4yoCRJnWRASZI6yYCSJHWSASVJ6iQDSpLUSQaUJKmTDChJUicZUJKkTmrteVCSuuWoD13a7xLGheUXnNHvEtRwBCVJ6iQDSpLUSQaUJKmTDChJUicZUJKkTjKgJEmd1KmASvK2JPclWZnk3H7XI0nqn84EVJLdgM8CJwKHAacnOay/VUmS+qVLX9R9A7Cyqh4ESHIFMA9Y0deqJO1SHj7/df0uYVw4+A/ubv09OjOCAg4CVg3bH2zaJEm7oC6NoDJCW23SKVkILGx2f5jkvlar0gu8El4OPN7vOjrvvJH+nDUe+Dc+SmP7N/7KkRq7FFCDwNRh+wPAIxt3qqpFwKIdVZReKMmyqprT7zqktvg33h1dusV3BzAjyfQkewCnAUv6XJMkqU86M4KqqvVJ3g/8HbAb8JdV9c99LkuS1CedCSiAqroOuK7fdWizvL2qnZ1/4x2Rqk3mIUiS1Hdd+gxKkqTnGVCSpE4yoCRJnWRASZI6yYDSNktyVJKpW+4pSVvPgNJWSzIjyf8B/gjYp9/1SGOpWSzgM0nel+T1TZtrV/WBAaVt8XHgxqp6S1Xd0+9ipLGS5A3A9cCjwP7AJ5PMqapK4r+XO1invqir7kpyPPCv9NZMvBs4tvm/yoOA9cClVbUiScov12mcSfLGqroNOAJYVFV/0vx9vxc4D/ilqnqur0Xugvw/Am1WktlJvkFvBfmPA78E/C29R6OsAR4CXgq8HcBw0niS5NVJlgCXJfkI8LPAW5vDE4CvAuuTTO9XjbsyA0ojSvKyJCfSe2jk+6vqvwBvBH4O+E5VfbCq/he9sJoGfKtvxUrbIMmvA1cBnwFmAz8F/AtwWJK3V9WPgQOBp6rqof5VuusyoPRifgv4z/Ru330kye30buP9dlU9neTAJL8L/D1wW1V9pZ/FSttgBfBq4MmqegpYSm+h6n8CPpzkz4E/A24HJ0r0g2vx6XlJ/hPwTFU9kOQk4A/pLd57KPBfq+rBpt+vAF+j9x/3t6tqbdPu508aV5JcAAxU1elJJgDvofcsupvpPTD1nqpatblrqD2OoARAkp8CFgCfTbI3sJzebKYf0psY8ZtJ3pTk/wK/BjxbVf+vqtYm2c1w0jh1ITA9yVuraj290dK/Ad+squsNp/5yBKUXSHIR8GPgO/Tuy/8OvZl6ZwKvAq6tqkv7VqA0xpK8Bzinqg7rdy16IQNKL5DkpcAvAu8CTgVOqaolSV4yfJptkt2qakO/6pTGSvM3fwZwCb2JqP6j2BF+D0ovUFU/Av42ySp6fx97Dh0CGAoqw0k7i+Zv/n/2uw5tys+gNKKquoPebb5XbtTulxUl7RAGlDYxbDrtDJqRk7c9JO1oBpQ20aw7Ngn4R+BP+12PpF2TkyQkSZ3kCEqS1EkGlCSpkwwoSVInGVCSpE4yoKRhkvx2knuTXLad1zkwyZfGqq6xlOTMJBf3uw5pS1xJQnqh9wEnjub5P0kmNAuMbqKqHgHeOdbFba9mxe7tOv/FfmdprDmCkhpJPk9vQdwlSX43yTVJ7kpya5LDmz4fTbIoyVeBS5uV3C9IckfT9z1Nv2lJ7mm290xyZXP8b5LclmROc+yHST6R5FvN+xzwIrXtluTB9ExK8lyS45pjNyc5JMnk0dS80XV/Mck/JXl5kilJrmp+lzuSHLOl86U2GVBSo6p+C3iE3lODp9F75MLhwEd44T/MRwHzmqcMLwCeqKrXA6+n91iSjR8P/j7g+821Pt6cP2Qv4NaqOgL4B+A3X6S2DTRPe6X3WPLlwLHNQqcDVbUS+NgoawYgyduBc4G5VfU4cBHwqeZ3eQfwF5s7X2qbt/ikkf0svX+kqaqbkuyXZJ/m2JKqeqbZfgtweJKh23n70Fsi6l82utZFzbXuSXLXsGPPAkNPI14O/MJmaroZOA6YDvwRvTD7e+COrawZeiE8B3hLVT3ZtL2Z3uPOh/q8rHk22EjnS61zBCWNbKTHew8tu/LvG/X7QFXNan6mV9VXR3GtIT8ets7hBjb/P403A8cCb6D3pONJwPH0Rl5bUzPAg8De9J6KPOQlwM8M+10Oah6FPtL5UusMKGlk/wD8KkCS44HHh400hvs74L1Jdm/6vjrJXhv1+UfgV5rjhwGv28aabgPeBDxXVeuAO+k9ovzmrawZeivV/zK9z9FmNm1fBd4/1CHJrG2sUxoTBpQ0so8Cc5rbcZ8E5r9Iv78AVgDfaCZF/DmbjoL+DJjSXOv3gLuAJ7a2oOa5RauAW5umm+mNgu7eypqHrncfvUD7YpKfBn576PwkK4Df2toapbHkYrFSy5LsBuxeVeuaIFgKvLqqnu1zaVKnOUlCat+ewNea24AB3ms4SVvmCErqmCT/DTh1o+YvVtUn+lGP1C8GlCSpk5wkIUnqJANKktRJBpQkqZMMKElSJ/1/9QJJi22c640AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "for cat in categorical_cols:\n",
    "    sns.countplot(cat, hue ='default', data = input_data)\n",
    "    plt.xticks(rotation =30)\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "    plt.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>default</th>\n",
       "      <th>duration_in_month</th>\n",
       "      <th>credit_amount</th>\n",
       "      <th>installment_as_income_perc</th>\n",
       "      <th>present_res_since</th>\n",
       "      <th>age</th>\n",
       "      <th>credits_this_bank</th>\n",
       "      <th>people_under_maintenance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1169</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>67</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>48</td>\n",
       "      <td>5951</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   default  duration_in_month  credit_amount  installment_as_income_perc  \\\n",
       "0        0                  6           1169                           4   \n",
       "1        1                 48           5951                           2   \n",
       "\n",
       "   present_res_since  age  credits_this_bank  people_under_maintenance  \n",
       "0                  4   67                  2                         1  \n",
       "1                  2   22                  1                         1  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "input_data[numericals_cols].head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/eswaroo/anaconda3/lib/python3.7/site-packages/statsmodels/nonparametric/kde.py:487: RuntimeWarning:\n",
      "\n",
      "invalid value encountered in true_divide\n",
      "\n",
      "/Users/eswaroo/anaconda3/lib/python3.7/site-packages/statsmodels/nonparametric/kdetools.py:34: RuntimeWarning:\n",
      "\n",
      "invalid value encountered in double_scalars\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.PairGrid at 0x1c2b281208>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1483.38x1440 with 72 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pairplot(input_data[numericals_cols], hue ='default')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c30378978>"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize =(10,5))\n",
    "sns.heatmap(input_data[numericals_cols].corr(), cmap ='viridis', linewidths= 2,\n",
    "            linecolor= 'white', annot= True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>default</th>\n",
       "      <th>duration_in_month</th>\n",
       "      <th>credit_amount</th>\n",
       "      <th>installment_as_income_perc</th>\n",
       "      <th>present_res_since</th>\n",
       "      <th>age</th>\n",
       "      <th>credits_this_bank</th>\n",
       "      <th>people_under_maintenance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.300000</td>\n",
       "      <td>20.903000</td>\n",
       "      <td>3271.258000</td>\n",
       "      <td>2.973000</td>\n",
       "      <td>2.845000</td>\n",
       "      <td>35.546000</td>\n",
       "      <td>1.407000</td>\n",
       "      <td>1.155000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.458487</td>\n",
       "      <td>12.058814</td>\n",
       "      <td>2822.736876</td>\n",
       "      <td>1.118715</td>\n",
       "      <td>1.103718</td>\n",
       "      <td>11.375469</td>\n",
       "      <td>0.577654</td>\n",
       "      <td>0.362086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>1365.500000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>2319.500000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>3972.250000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>18424.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           default  duration_in_month  credit_amount  \\\n",
       "count  1000.000000        1000.000000    1000.000000   \n",
       "mean      0.300000          20.903000    3271.258000   \n",
       "std       0.458487          12.058814    2822.736876   \n",
       "min       0.000000           4.000000     250.000000   \n",
       "25%       0.000000          12.000000    1365.500000   \n",
       "50%       0.000000          18.000000    2319.500000   \n",
       "75%       1.000000          24.000000    3972.250000   \n",
       "max       1.000000          72.000000   18424.000000   \n",
       "\n",
       "       installment_as_income_perc  present_res_since          age  \\\n",
       "count                 1000.000000        1000.000000  1000.000000   \n",
       "mean                     2.973000           2.845000    35.546000   \n",
       "std                      1.118715           1.103718    11.375469   \n",
       "min                      1.000000           1.000000    19.000000   \n",
       "25%                      2.000000           2.000000    27.000000   \n",
       "50%                      3.000000           3.000000    33.000000   \n",
       "75%                      4.000000           4.000000    42.000000   \n",
       "max                      4.000000           4.000000    75.000000   \n",
       "\n",
       "       credits_this_bank  people_under_maintenance  \n",
       "count        1000.000000               1000.000000  \n",
       "mean            1.407000                  1.155000  \n",
       "std             0.577654                  0.362086  \n",
       "min             1.000000                  1.000000  \n",
       "25%             1.000000                  1.000000  \n",
       "50%             1.000000                  1.000000  \n",
       "75%             2.000000                  1.000000  \n",
       "max             4.000000                  2.000000  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "input_data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1000, 21)"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_data = copy.deepcopy(input_data)\n",
    "final_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [],
   "source": [
    "dummy_data = pd.get_dummies(final_data[categorical_cols], drop_first= True, )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1000, 41)"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummy_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1000, 49)"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_data = pd.concat([final_data[numericals_cols],dummy_data], axis =1)\n",
    "final_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 310,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c4fed4f28>"
      ]
     },
     "execution_count": 310,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "final_data.corr()['default'].sort_values(ascending=False).plot(kind ='bar', figsize =(20,4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>default</th>\n",
       "      <th>duration_in_month</th>\n",
       "      <th>credit_amount</th>\n",
       "      <th>installment_as_income_perc</th>\n",
       "      <th>present_res_since</th>\n",
       "      <th>age</th>\n",
       "      <th>credits_this_bank</th>\n",
       "      <th>people_under_maintenance</th>\n",
       "      <th>account_check_status_&lt; 0 DM</th>\n",
       "      <th>account_check_status_&gt;= 200 DM / salary assignments for at least 1 year</th>\n",
       "      <th>...</th>\n",
       "      <th>property_unknown / no property</th>\n",
       "      <th>other_installment_plans_none</th>\n",
       "      <th>other_installment_plans_stores</th>\n",
       "      <th>housing_own</th>\n",
       "      <th>housing_rent</th>\n",
       "      <th>job_skilled employee / official</th>\n",
       "      <th>job_unemployed/ unskilled - non-resident</th>\n",
       "      <th>job_unskilled - resident</th>\n",
       "      <th>telephone_yes, registered under the customers name</th>\n",
       "      <th>foreign_worker_yes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1169</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>67</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>48</td>\n",
       "      <td>5951</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>2096</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>49</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>42</td>\n",
       "      <td>7882</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>45</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>4870</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>53</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   default  duration_in_month  credit_amount  installment_as_income_perc  \\\n",
       "0        0                  6           1169                           4   \n",
       "1        1                 48           5951                           2   \n",
       "2        0                 12           2096                           2   \n",
       "3        0                 42           7882                           2   \n",
       "4        1                 24           4870                           3   \n",
       "\n",
       "   present_res_since  age  credits_this_bank  people_under_maintenance  \\\n",
       "0                  4   67                  2                         1   \n",
       "1                  2   22                  1                         1   \n",
       "2                  3   49                  1                         2   \n",
       "3                  4   45                  1                         2   \n",
       "4                  4   53                  2                         2   \n",
       "\n",
       "   account_check_status_< 0 DM  \\\n",
       "0                            1   \n",
       "1                            0   \n",
       "2                            0   \n",
       "3                            1   \n",
       "4                            1   \n",
       "\n",
       "   account_check_status_>= 200 DM / salary assignments for at least 1 year  \\\n",
       "0                                                  0                         \n",
       "1                                                  0                         \n",
       "2                                                  0                         \n",
       "3                                                  0                         \n",
       "4                                                  0                         \n",
       "\n",
       "   ...  property_unknown / no property  other_installment_plans_none  \\\n",
       "0  ...                               0                             1   \n",
       "1  ...                               0                             1   \n",
       "2  ...                               0                             1   \n",
       "3  ...                               0                             1   \n",
       "4  ...                               1                             1   \n",
       "\n",
       "   other_installment_plans_stores  housing_own  housing_rent  \\\n",
       "0                               0            1             0   \n",
       "1                               0            1             0   \n",
       "2                               0            1             0   \n",
       "3                               0            0             0   \n",
       "4                               0            0             0   \n",
       "\n",
       "   job_skilled employee / official  job_unemployed/ unskilled - non-resident  \\\n",
       "0                                1                                         0   \n",
       "1                                1                                         0   \n",
       "2                                0                                         0   \n",
       "3                                1                                         0   \n",
       "4                                1                                         0   \n",
       "\n",
       "   job_unskilled - resident  \\\n",
       "0                         0   \n",
       "1                         0   \n",
       "2                         1   \n",
       "3                         0   \n",
       "4                         0   \n",
       "\n",
       "   telephone_yes, registered under the customers name   foreign_worker_yes  \n",
       "0                                                  1                     1  \n",
       "1                                                  0                     1  \n",
       "2                                                  0                     1  \n",
       "3                                                  0                     1  \n",
       "4                                                  0                     1  \n",
       "\n",
       "[5 rows x 49 columns]"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.model_selection import train_test_split, GridSearchCV, StratifiedKFold, cross_val_score\n",
    "from sklearn import metrics\n",
    "\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier,VotingClassifier\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from xgboost import XGBClassifier\n",
    "from collections import Counter\n",
    "from imblearn.over_sampling import SMOTE\n",
    "from lightgbm import LGBMClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 273,
   "metadata": {},
   "outputs": [],
   "source": [
    "target_col = 'default'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1000, 48) (1000,)\n"
     ]
    }
   ],
   "source": [
    "X = final_data.drop(target_col, axis =1)\n",
    "y = final_data[target_col]\n",
    "\n",
    "print(X.shape, y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "metadata": {},
   "outputs": [],
   "source": [
    "imbalanced_treatment = \"yes\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Before SMOTE :......................................\n",
      "(700, 48) (300, 48) (700,) (300,)\n",
      "y_train counter:  Counter({0: 491, 1: 209})\n",
      "y_test counter:  Counter({0: 209, 1: 91})\n",
      "\n",
      " Performing imbalanced class treatment ..............\n",
      "y_train counter:  Counter({0: 491, 1: 491})\n",
      "y_test counter:  Counter({0: 209, 1: 91})\n"
     ]
    }
   ],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n",
    "print(\"\\n\",\"Before SMOTE :......................................\")\n",
    "print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)\n",
    "print(\"y_train counter: \",Counter(y_train))\n",
    "print(\"y_test counter: \", Counter(y_test))\n",
    "\n",
    "if imbalanced_treatment == \"yes\":\n",
    "    print(\"\\n\", \"Performing imbalanced class treatment ..............\")\n",
    "    # transform the dataset\n",
    "    oversample = SMOTE()\n",
    "    X_train, y_train = oversample.fit_resample(X_train, y_train)\n",
    "    print(\"y_train counter: \",Counter(y_train))\n",
    "    print(\"y_test counter: \", Counter(y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = MinMaxScaler()\n",
    "scaler.fit(X_train)\n",
    "X_train= scaler.transform(X_train)\n",
    "X_test= scaler.transform(X_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Spot Check Algorithms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Spot Check Algorithms\n",
    "models = []\n",
    "models.append(('LR', LogisticRegression(solver='liblinear', multi_class='ovr')))\n",
    "models.append(('LDA', LinearDiscriminantAnalysis()))\n",
    "models.append(('KNN', KNeighborsClassifier()))\n",
    "models.append(('CART', DecisionTreeClassifier()))\n",
    "models.append(('NB', GaussianNB()))\n",
    "models.append(('SVM', SVC(gamma='auto')))\n",
    "models.append(('XGB', XGBClassifier()))\n",
    "models.append(('LGB', LGBMClassifier()))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: ......................  LR\n",
      "Training: ......................  LDA\n",
      "Training: ......................  KNN\n",
      "Training: ......................  CART\n",
      "Training: ......................  NB\n",
      "Training: ......................  SVM\n",
      "Training: ......................  XGB\n",
      "Training: ......................  LGB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>model_name</th>\n",
       "      <th>accuracy</th>\n",
       "      <th>cv.std</th>\n",
       "      <th>imbalanced_treatment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LR</td>\n",
       "      <td>0.815729</td>\n",
       "      <td>0.035196</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>SVM</td>\n",
       "      <td>0.812657</td>\n",
       "      <td>0.023968</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LDA</td>\n",
       "      <td>0.811637</td>\n",
       "      <td>0.025684</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LGB</td>\n",
       "      <td>0.808576</td>\n",
       "      <td>0.038815</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>XGB</td>\n",
       "      <td>0.806545</td>\n",
       "      <td>0.036039</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>KNN</td>\n",
       "      <td>0.784148</td>\n",
       "      <td>0.023680</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NB</td>\n",
       "      <td>0.778984</td>\n",
       "      <td>0.035274</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CART</td>\n",
       "      <td>0.766801</td>\n",
       "      <td>0.035969</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  model_name  accuracy    cv.std imbalanced_treatment\n",
       "0         LR  0.815729  0.035196                  yes\n",
       "0        SVM  0.812657  0.023968                  yes\n",
       "0        LDA  0.811637  0.025684                  yes\n",
       "0        LGB  0.808576  0.038815                  yes\n",
       "0        XGB  0.806545  0.036039                  yes\n",
       "0        KNN  0.784148  0.023680                  yes\n",
       "0         NB  0.778984  0.035274                  yes\n",
       "0       CART  0.766801  0.035969                  yes"
      ]
     },
     "execution_count": 279,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_stats = pd.DataFrame(columns = ['model_name', \"accuracy\",\"cv.std\"])\n",
    "\n",
    "for name, model in models:\n",
    "    print(\"Training: ...................... \", name)\n",
    "    kfold = StratifiedKFold(n_splits=10, random_state=1, shuffle=True)\n",
    "    cv_results = cross_val_score(model, X_train, y_train, cv=kfold, scoring='accuracy')\n",
    "    model_stats_append= pd.DataFrame({'model_name':name, \"accuracy\": cv_results.mean(), \n",
    "                                  \"cv.std\": cv_results.std()}, index=[0])\n",
    "    model_stats= model_stats.append(model_stats_append)\n",
    "    \n",
    "model_stats['imbalanced_treatment'] =imbalanced_treatment\n",
    "\n",
    "model_stats.sort_values(by ='accuracy', ascending =False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Neural network Model "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 444,
   "metadata": {},
   "outputs": [],
   "source": [
    "# from tensorflow import keras \n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense, Dropout\n",
    "from tensorflow.keras.callbacks import EarlyStopping\n",
    "from keras import optimizers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 445,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(982, 48)"
      ]
     },
     "execution_count": 445,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 446,
   "metadata": {},
   "outputs": [],
   "source": [
    "# https://towardsdatascience.com/preventing-deep-neural-network-from-overfitting-953458db800a\n",
    "# https://machinelearningmastery.com/how-to-reduce-overfitting-in-deep-neural-networks-with-weight-constraints-in-keras/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 447,
   "metadata": {},
   "outputs": [],
   "source": [
    "# del model\n",
    "from keras.regularizers import l1\n",
    "# instantiate regularizer\n",
    "reg = l1(0.001)\n",
    "\n",
    "\n",
    "\n",
    "from keras.constraints import max_norm\n",
    "# instantiate norm\n",
    "norm = max_norm(3.0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 635,
   "metadata": {},
   "outputs": [],
   "source": [
    "del model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 636,
   "metadata": {},
   "outputs": [],
   "source": [
    "# model = Sequential()\n",
    "# model.add(Dense(90,input_dim = X_train.shape[1],activation='relu', activity_regularizer=reg))\n",
    "# model.add(Dropout (0.2))\n",
    "# model.add(Dense(60,activation='tanh'))\n",
    "# model.add(Dropout (0.5))\n",
    "# # model.add(Dense(60/3,activation='relu', activity_regularizer=reg))\n",
    "# # model.add(Dropout (0.4))\n",
    "# model.add(Dense(20,activation='tanh', activity_regularizer=reg))\n",
    "# model.add(Dropout (0.2))\n",
    "# model.add(Dense(1,activation='sigmoid'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 637,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_41\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_152 (Dense)            (None, 128)               6272      \n",
      "_________________________________________________________________\n",
      "dense_153 (Dense)            (None, 64)                8256      \n",
      "_________________________________________________________________\n",
      "dropout_108 (Dropout)        (None, 64)                0         \n",
      "_________________________________________________________________\n",
      "dense_154 (Dense)            (None, 32)                2080      \n",
      "_________________________________________________________________\n",
      "dropout_109 (Dropout)        (None, 32)                0         \n",
      "_________________________________________________________________\n",
      "dense_155 (Dense)            (None, 16)                528       \n",
      "_________________________________________________________________\n",
      "dropout_110 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_156 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 17,153\n",
      "Trainable params: 17,153\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model = Sequential()\n",
    "model.add(Dense(128, activation=\"relu\", input_shape = (X_train.shape[1],))) # Hidden Layer 1 that receives the Input from the Input Layer\n",
    "\n",
    "model.add(Dense(64, activation=\"relu\")) # Hidden Layer 2\n",
    "model.add(Dropout(0.2))\n",
    "\n",
    "model.add(Dense(32, activation=\"relu\")) # Hidden Layer 3\n",
    "model.add(Dropout(0.2))\n",
    "\n",
    "model.add(Dense(16, activation=\"tanh\")) # Hidden Layer 4\n",
    "model.add(Dropout(0.2))\n",
    "\n",
    "\n",
    "model.add(Dense(1, activation=\"sigmoid\")) # Outout Layer\n",
    "\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 638,
   "metadata": {},
   "outputs": [],
   "source": [
    "# help(EarlyStopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 639,
   "metadata": {},
   "outputs": [],
   "source": [
    "early_stop = EarlyStopping(monitor='val_loss', verbose =1, patience = 100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 640,
   "metadata": {},
   "outputs": [],
   "source": [
    "model.compile(loss='binary_crossentropy', optimizer='sgd',\n",
    "              metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 641,
   "metadata": {},
   "outputs": [],
   "source": [
    "# learning_rate = 0.01\n",
    "# sgd= optimizers.SGD(lr=learning_rate)\n",
    "# model.compile(loss='binary_crossentropy',optimizer=sgd, metrics=['acc'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 642,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 982 samples, validate on 300 samples\n",
      "Epoch 1/700\n",
      "982/982 [==============================] - 1s 1ms/sample - loss: 0.7151 - acc: 0.4532 - val_loss: 0.7145 - val_acc: 0.4433\n",
      "Epoch 2/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.7133 - acc: 0.4868 - val_loss: 0.7118 - val_acc: 0.4733\n",
      "Epoch 3/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.7123 - acc: 0.4695 - val_loss: 0.7094 - val_acc: 0.4800\n",
      "Epoch 4/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.7114 - acc: 0.4644 - val_loss: 0.7078 - val_acc: 0.4900\n",
      "Epoch 5/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.7070 - acc: 0.4695 - val_loss: 0.7054 - val_acc: 0.5033\n",
      "Epoch 6/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.7082 - acc: 0.4786 - val_loss: 0.7037 - val_acc: 0.5067\n",
      "Epoch 7/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.7100 - acc: 0.4542 - val_loss: 0.7023 - val_acc: 0.5033\n",
      "Epoch 8/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.7006 - acc: 0.4898 - val_loss: 0.6996 - val_acc: 0.5233\n",
      "Epoch 9/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.7034 - acc: 0.4919 - val_loss: 0.6984 - val_acc: 0.5300\n",
      "Epoch 10/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.7038 - acc: 0.4959 - val_loss: 0.6961 - val_acc: 0.5200\n",
      "Epoch 11/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.7002 - acc: 0.4807 - val_loss: 0.6940 - val_acc: 0.5233\n",
      "Epoch 12/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.7020 - acc: 0.5041 - val_loss: 0.6926 - val_acc: 0.5400\n",
      "Epoch 13/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.7005 - acc: 0.4919 - val_loss: 0.6921 - val_acc: 0.5400\n",
      "Epoch 14/700\n",
      "982/982 [==============================] - 0s 18us/sample - loss: 0.6985 - acc: 0.5010 - val_loss: 0.6914 - val_acc: 0.5500\n",
      "Epoch 15/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.7080 - acc: 0.4572 - val_loss: 0.6899 - val_acc: 0.5567\n",
      "Epoch 16/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6958 - acc: 0.5102 - val_loss: 0.6893 - val_acc: 0.5633\n",
      "Epoch 17/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6976 - acc: 0.5092 - val_loss: 0.6883 - val_acc: 0.5633\n",
      "Epoch 18/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6954 - acc: 0.5132 - val_loss: 0.6877 - val_acc: 0.5667\n",
      "Epoch 19/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.7014 - acc: 0.4959 - val_loss: 0.6864 - val_acc: 0.5767\n",
      "Epoch 20/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6934 - acc: 0.5122 - val_loss: 0.6852 - val_acc: 0.5767\n",
      "Epoch 21/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6892 - acc: 0.5407 - val_loss: 0.6849 - val_acc: 0.5800\n",
      "Epoch 22/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6947 - acc: 0.5122 - val_loss: 0.6839 - val_acc: 0.5900\n",
      "Epoch 23/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6942 - acc: 0.5336 - val_loss: 0.6830 - val_acc: 0.5967\n",
      "Epoch 24/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6947 - acc: 0.5071 - val_loss: 0.6817 - val_acc: 0.6000\n",
      "Epoch 25/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6917 - acc: 0.5234 - val_loss: 0.6819 - val_acc: 0.6000\n",
      "Epoch 26/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6944 - acc: 0.5051 - val_loss: 0.6809 - val_acc: 0.6067\n",
      "Epoch 27/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6909 - acc: 0.5438 - val_loss: 0.6805 - val_acc: 0.6133\n",
      "Epoch 28/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6862 - acc: 0.5489 - val_loss: 0.6797 - val_acc: 0.6167\n",
      "Epoch 29/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6841 - acc: 0.5448 - val_loss: 0.6800 - val_acc: 0.6100\n",
      "Epoch 30/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6856 - acc: 0.5682 - val_loss: 0.6787 - val_acc: 0.6200\n",
      "Epoch 31/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6836 - acc: 0.5774 - val_loss: 0.6769 - val_acc: 0.6300\n",
      "Epoch 32/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6918 - acc: 0.5092 - val_loss: 0.6759 - val_acc: 0.6367\n",
      "Epoch 33/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6855 - acc: 0.5407 - val_loss: 0.6764 - val_acc: 0.6400\n",
      "Epoch 34/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6852 - acc: 0.5580 - val_loss: 0.6761 - val_acc: 0.6400\n",
      "Epoch 35/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6906 - acc: 0.5132 - val_loss: 0.6760 - val_acc: 0.6433\n",
      "Epoch 36/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6823 - acc: 0.5743 - val_loss: 0.6752 - val_acc: 0.6467\n",
      "Epoch 37/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6820 - acc: 0.5601 - val_loss: 0.6745 - val_acc: 0.6500\n",
      "Epoch 38/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6832 - acc: 0.5519 - val_loss: 0.6741 - val_acc: 0.6500\n",
      "Epoch 39/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6758 - acc: 0.5937 - val_loss: 0.6729 - val_acc: 0.6567\n",
      "Epoch 40/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6786 - acc: 0.5815 - val_loss: 0.6717 - val_acc: 0.6600\n",
      "Epoch 41/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6751 - acc: 0.5804 - val_loss: 0.6716 - val_acc: 0.6633\n",
      "Epoch 42/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6753 - acc: 0.5662 - val_loss: 0.6713 - val_acc: 0.6633\n",
      "Epoch 43/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6810 - acc: 0.5723 - val_loss: 0.6705 - val_acc: 0.6667\n",
      "Epoch 44/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6759 - acc: 0.5570 - val_loss: 0.6701 - val_acc: 0.6667\n",
      "Epoch 45/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6791 - acc: 0.5733 - val_loss: 0.6691 - val_acc: 0.6667\n",
      "Epoch 46/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6722 - acc: 0.5957 - val_loss: 0.6689 - val_acc: 0.6667\n",
      "Epoch 47/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6796 - acc: 0.5723 - val_loss: 0.6685 - val_acc: 0.6700\n",
      "Epoch 48/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6698 - acc: 0.6120 - val_loss: 0.6687 - val_acc: 0.6667\n",
      "Epoch 49/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6725 - acc: 0.5988 - val_loss: 0.6676 - val_acc: 0.6700\n",
      "Epoch 50/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6744 - acc: 0.5998 - val_loss: 0.6670 - val_acc: 0.6700\n",
      "Epoch 51/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6737 - acc: 0.5916 - val_loss: 0.6663 - val_acc: 0.6667\n",
      "Epoch 52/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.6764 - acc: 0.5866 - val_loss: 0.6658 - val_acc: 0.6700\n",
      "Epoch 53/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6804 - acc: 0.5682 - val_loss: 0.6652 - val_acc: 0.6700\n",
      "Epoch 54/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.6760 - acc: 0.5794 - val_loss: 0.6654 - val_acc: 0.6633\n",
      "Epoch 55/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6705 - acc: 0.6171 - val_loss: 0.6638 - val_acc: 0.6767\n",
      "Epoch 56/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6689 - acc: 0.6059 - val_loss: 0.6629 - val_acc: 0.6733\n",
      "Epoch 57/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6711 - acc: 0.5794 - val_loss: 0.6617 - val_acc: 0.6700\n",
      "Epoch 58/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.6663 - acc: 0.6161 - val_loss: 0.6621 - val_acc: 0.6733\n",
      "Epoch 59/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6669 - acc: 0.6191 - val_loss: 0.6615 - val_acc: 0.6733\n",
      "Epoch 60/700\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6667 - acc: 0.6191 - val_loss: 0.6615 - val_acc: 0.6700\n",
      "Epoch 61/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6580 - acc: 0.6293 - val_loss: 0.6608 - val_acc: 0.6733\n",
      "Epoch 62/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6624 - acc: 0.6130 - val_loss: 0.6603 - val_acc: 0.6700\n",
      "Epoch 63/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.6695 - acc: 0.5998 - val_loss: 0.6600 - val_acc: 0.6733\n",
      "Epoch 64/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.6686 - acc: 0.6090 - val_loss: 0.6592 - val_acc: 0.6733\n",
      "Epoch 65/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6628 - acc: 0.6100 - val_loss: 0.6584 - val_acc: 0.6733\n",
      "Epoch 66/700\n",
      "982/982 [==============================] - 0s 18us/sample - loss: 0.6599 - acc: 0.6242 - val_loss: 0.6581 - val_acc: 0.6733\n",
      "Epoch 67/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6618 - acc: 0.6100 - val_loss: 0.6581 - val_acc: 0.6767\n",
      "Epoch 68/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6597 - acc: 0.6191 - val_loss: 0.6585 - val_acc: 0.6867\n",
      "Epoch 69/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.6588 - acc: 0.6222 - val_loss: 0.6589 - val_acc: 0.6800\n",
      "Epoch 70/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6580 - acc: 0.6263 - val_loss: 0.6579 - val_acc: 0.6867\n",
      "Epoch 71/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6595 - acc: 0.6293 - val_loss: 0.6576 - val_acc: 0.6800\n",
      "Epoch 72/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6506 - acc: 0.6497 - val_loss: 0.6571 - val_acc: 0.6767\n",
      "Epoch 73/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6547 - acc: 0.6415 - val_loss: 0.6570 - val_acc: 0.6700\n",
      "Epoch 74/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6594 - acc: 0.6578 - val_loss: 0.6560 - val_acc: 0.6800\n",
      "Epoch 75/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6532 - acc: 0.6273 - val_loss: 0.6555 - val_acc: 0.6767\n",
      "Epoch 76/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6470 - acc: 0.6731 - val_loss: 0.6554 - val_acc: 0.6767\n",
      "Epoch 77/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6585 - acc: 0.6242 - val_loss: 0.6547 - val_acc: 0.6767\n",
      "Epoch 78/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6503 - acc: 0.6395 - val_loss: 0.6546 - val_acc: 0.6800\n",
      "Epoch 79/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6590 - acc: 0.6344 - val_loss: 0.6537 - val_acc: 0.6800\n",
      "Epoch 80/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6451 - acc: 0.6660 - val_loss: 0.6536 - val_acc: 0.6833\n",
      "Epoch 81/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6525 - acc: 0.6415 - val_loss: 0.6538 - val_acc: 0.6767\n",
      "Epoch 82/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6549 - acc: 0.6334 - val_loss: 0.6532 - val_acc: 0.6800\n",
      "Epoch 83/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6460 - acc: 0.6670 - val_loss: 0.6527 - val_acc: 0.6800\n",
      "Epoch 84/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6490 - acc: 0.6640 - val_loss: 0.6517 - val_acc: 0.6800\n",
      "Epoch 85/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6474 - acc: 0.6619 - val_loss: 0.6512 - val_acc: 0.6800\n",
      "Epoch 86/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6433 - acc: 0.6670 - val_loss: 0.6497 - val_acc: 0.6767\n",
      "Epoch 87/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6468 - acc: 0.6731 - val_loss: 0.6495 - val_acc: 0.6800\n",
      "Epoch 88/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6491 - acc: 0.6629 - val_loss: 0.6477 - val_acc: 0.6833\n",
      "Epoch 89/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6472 - acc: 0.6568 - val_loss: 0.6469 - val_acc: 0.6867\n",
      "Epoch 90/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6425 - acc: 0.6884 - val_loss: 0.6461 - val_acc: 0.6867\n",
      "Epoch 91/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6335 - acc: 0.6976 - val_loss: 0.6463 - val_acc: 0.6867\n",
      "Epoch 92/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6390 - acc: 0.6802 - val_loss: 0.6454 - val_acc: 0.6867\n",
      "Epoch 93/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6442 - acc: 0.6558 - val_loss: 0.6453 - val_acc: 0.6900\n",
      "Epoch 94/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6397 - acc: 0.6833 - val_loss: 0.6448 - val_acc: 0.6933\n",
      "Epoch 95/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6375 - acc: 0.6884 - val_loss: 0.6438 - val_acc: 0.6900\n",
      "Epoch 96/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6430 - acc: 0.6660 - val_loss: 0.6433 - val_acc: 0.6900\n",
      "Epoch 97/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6344 - acc: 0.6914 - val_loss: 0.6434 - val_acc: 0.6967\n",
      "Epoch 98/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6393 - acc: 0.6650 - val_loss: 0.6416 - val_acc: 0.6867\n",
      "Epoch 99/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6362 - acc: 0.6752 - val_loss: 0.6410 - val_acc: 0.6867\n",
      "Epoch 100/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6364 - acc: 0.6833 - val_loss: 0.6400 - val_acc: 0.6833\n",
      "Epoch 101/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6407 - acc: 0.6762 - val_loss: 0.6395 - val_acc: 0.6867\n",
      "Epoch 102/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6301 - acc: 0.6945 - val_loss: 0.6387 - val_acc: 0.6900\n",
      "Epoch 103/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6326 - acc: 0.6711 - val_loss: 0.6379 - val_acc: 0.6967\n",
      "Epoch 104/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6334 - acc: 0.6823 - val_loss: 0.6373 - val_acc: 0.7000\n",
      "Epoch 105/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6342 - acc: 0.6925 - val_loss: 0.6366 - val_acc: 0.6967\n",
      "Epoch 106/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6274 - acc: 0.7108 - val_loss: 0.6352 - val_acc: 0.7000\n",
      "Epoch 107/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6281 - acc: 0.6874 - val_loss: 0.6350 - val_acc: 0.7000\n",
      "Epoch 108/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6323 - acc: 0.6731 - val_loss: 0.6359 - val_acc: 0.6933\n",
      "Epoch 109/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6260 - acc: 0.6914 - val_loss: 0.6347 - val_acc: 0.7000\n",
      "Epoch 110/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6259 - acc: 0.6925 - val_loss: 0.6339 - val_acc: 0.7000\n",
      "Epoch 111/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6216 - acc: 0.7108 - val_loss: 0.6335 - val_acc: 0.6900\n",
      "Epoch 112/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6163 - acc: 0.6976 - val_loss: 0.6334 - val_acc: 0.6933\n",
      "Epoch 113/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6194 - acc: 0.6864 - val_loss: 0.6329 - val_acc: 0.6933\n",
      "Epoch 114/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6271 - acc: 0.6894 - val_loss: 0.6323 - val_acc: 0.6900\n",
      "Epoch 115/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6204 - acc: 0.6935 - val_loss: 0.6311 - val_acc: 0.6900\n",
      "Epoch 116/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6236 - acc: 0.7077 - val_loss: 0.6301 - val_acc: 0.6933\n",
      "Epoch 117/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6195 - acc: 0.7047 - val_loss: 0.6300 - val_acc: 0.6933\n",
      "Epoch 118/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6227 - acc: 0.7047 - val_loss: 0.6278 - val_acc: 0.6933\n",
      "Epoch 119/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6163 - acc: 0.7067 - val_loss: 0.6263 - val_acc: 0.6933\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 120/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6142 - acc: 0.7159 - val_loss: 0.6246 - val_acc: 0.6933\n",
      "Epoch 121/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6203 - acc: 0.6864 - val_loss: 0.6236 - val_acc: 0.7000\n",
      "Epoch 122/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6172 - acc: 0.6996 - val_loss: 0.6230 - val_acc: 0.6967\n",
      "Epoch 123/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6204 - acc: 0.6884 - val_loss: 0.6222 - val_acc: 0.6967\n",
      "Epoch 124/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6144 - acc: 0.7128 - val_loss: 0.6228 - val_acc: 0.6967\n",
      "Epoch 125/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6109 - acc: 0.7179 - val_loss: 0.6213 - val_acc: 0.6967\n",
      "Epoch 126/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.6122 - acc: 0.7118 - val_loss: 0.6218 - val_acc: 0.7000\n",
      "Epoch 127/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6118 - acc: 0.7016 - val_loss: 0.6207 - val_acc: 0.7000\n",
      "Epoch 128/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6135 - acc: 0.6976 - val_loss: 0.6200 - val_acc: 0.7000\n",
      "Epoch 129/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6041 - acc: 0.7312 - val_loss: 0.6197 - val_acc: 0.7067\n",
      "Epoch 130/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6096 - acc: 0.6986 - val_loss: 0.6192 - val_acc: 0.7067\n",
      "Epoch 131/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6048 - acc: 0.7128 - val_loss: 0.6178 - val_acc: 0.7033\n",
      "Epoch 132/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.6069 - acc: 0.7108 - val_loss: 0.6164 - val_acc: 0.7033\n",
      "Epoch 133/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.6008 - acc: 0.7220 - val_loss: 0.6154 - val_acc: 0.7033\n",
      "Epoch 134/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5946 - acc: 0.7251 - val_loss: 0.6143 - val_acc: 0.7033\n",
      "Epoch 135/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.5996 - acc: 0.7251 - val_loss: 0.6137 - val_acc: 0.7033\n",
      "Epoch 136/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5984 - acc: 0.7169 - val_loss: 0.6127 - val_acc: 0.7000\n",
      "Epoch 137/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5980 - acc: 0.7301 - val_loss: 0.6122 - val_acc: 0.7000\n",
      "Epoch 138/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5976 - acc: 0.7088 - val_loss: 0.6112 - val_acc: 0.7000\n",
      "Epoch 139/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5976 - acc: 0.7230 - val_loss: 0.6095 - val_acc: 0.7033\n",
      "Epoch 140/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5961 - acc: 0.7322 - val_loss: 0.6092 - val_acc: 0.7000\n",
      "Epoch 141/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5995 - acc: 0.7169 - val_loss: 0.6096 - val_acc: 0.7067\n",
      "Epoch 142/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5917 - acc: 0.7281 - val_loss: 0.6098 - val_acc: 0.7133\n",
      "Epoch 143/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5955 - acc: 0.7373 - val_loss: 0.6088 - val_acc: 0.7133\n",
      "Epoch 144/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5945 - acc: 0.7230 - val_loss: 0.6069 - val_acc: 0.7067\n",
      "Epoch 145/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5853 - acc: 0.7495 - val_loss: 0.6063 - val_acc: 0.7100\n",
      "Epoch 146/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5885 - acc: 0.7230 - val_loss: 0.6046 - val_acc: 0.7100\n",
      "Epoch 147/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5860 - acc: 0.7393 - val_loss: 0.6040 - val_acc: 0.7100\n",
      "Epoch 148/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5929 - acc: 0.7251 - val_loss: 0.6037 - val_acc: 0.7133\n",
      "Epoch 149/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5838 - acc: 0.7281 - val_loss: 0.6013 - val_acc: 0.7067\n",
      "Epoch 150/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5857 - acc: 0.7515 - val_loss: 0.5998 - val_acc: 0.7033\n",
      "Epoch 151/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5815 - acc: 0.7485 - val_loss: 0.5996 - val_acc: 0.7100\n",
      "Epoch 152/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5912 - acc: 0.7159 - val_loss: 0.5990 - val_acc: 0.7067\n",
      "Epoch 153/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5762 - acc: 0.7678 - val_loss: 0.5991 - val_acc: 0.7133\n",
      "Epoch 154/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5874 - acc: 0.7352 - val_loss: 0.5980 - val_acc: 0.7133\n",
      "Epoch 155/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.5880 - acc: 0.7424 - val_loss: 0.5974 - val_acc: 0.7133\n",
      "Epoch 156/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5845 - acc: 0.7322 - val_loss: 0.5958 - val_acc: 0.7100\n",
      "Epoch 157/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5791 - acc: 0.7373 - val_loss: 0.5959 - val_acc: 0.7167\n",
      "Epoch 158/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5760 - acc: 0.7464 - val_loss: 0.5965 - val_acc: 0.7267\n",
      "Epoch 159/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5756 - acc: 0.7444 - val_loss: 0.5964 - val_acc: 0.7267\n",
      "Epoch 160/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5782 - acc: 0.7291 - val_loss: 0.5949 - val_acc: 0.7267\n",
      "Epoch 161/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5692 - acc: 0.7587 - val_loss: 0.5950 - val_acc: 0.7200\n",
      "Epoch 162/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5701 - acc: 0.7485 - val_loss: 0.5942 - val_acc: 0.7267\n",
      "Epoch 163/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5725 - acc: 0.7413 - val_loss: 0.5938 - val_acc: 0.7267\n",
      "Epoch 164/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5748 - acc: 0.7383 - val_loss: 0.5918 - val_acc: 0.7267\n",
      "Epoch 165/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.5699 - acc: 0.7230 - val_loss: 0.5904 - val_acc: 0.7300\n",
      "Epoch 166/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5589 - acc: 0.7760 - val_loss: 0.5899 - val_acc: 0.7267\n",
      "Epoch 167/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5640 - acc: 0.7505 - val_loss: 0.5868 - val_acc: 0.7200\n",
      "Epoch 168/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5665 - acc: 0.7648 - val_loss: 0.5856 - val_acc: 0.7200\n",
      "Epoch 169/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5696 - acc: 0.7373 - val_loss: 0.5856 - val_acc: 0.7200\n",
      "Epoch 170/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5572 - acc: 0.7597 - val_loss: 0.5853 - val_acc: 0.7267\n",
      "Epoch 171/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5541 - acc: 0.7607 - val_loss: 0.5840 - val_acc: 0.7267\n",
      "Epoch 172/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.5709 - acc: 0.7587 - val_loss: 0.5847 - val_acc: 0.7233\n",
      "Epoch 173/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5571 - acc: 0.7525 - val_loss: 0.5831 - val_acc: 0.7267\n",
      "Epoch 174/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5608 - acc: 0.7403 - val_loss: 0.5820 - val_acc: 0.7233\n",
      "Epoch 175/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5603 - acc: 0.7475 - val_loss: 0.5806 - val_acc: 0.7233\n",
      "Epoch 176/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5550 - acc: 0.7637 - val_loss: 0.5797 - val_acc: 0.7233\n",
      "Epoch 177/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5596 - acc: 0.7566 - val_loss: 0.5781 - val_acc: 0.7233\n",
      "Epoch 178/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5535 - acc: 0.7424 - val_loss: 0.5772 - val_acc: 0.7233\n",
      "Epoch 179/700\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5534 - acc: 0.7505 - val_loss: 0.5763 - val_acc: 0.7233\n",
      "Epoch 180/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5501 - acc: 0.7536 - val_loss: 0.5762 - val_acc: 0.7300\n",
      "Epoch 181/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5503 - acc: 0.7515 - val_loss: 0.5746 - val_acc: 0.7233\n",
      "Epoch 182/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5595 - acc: 0.7403 - val_loss: 0.5741 - val_acc: 0.7267\n",
      "Epoch 183/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5577 - acc: 0.7525 - val_loss: 0.5750 - val_acc: 0.7300\n",
      "Epoch 184/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5578 - acc: 0.7597 - val_loss: 0.5738 - val_acc: 0.7300\n",
      "Epoch 185/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5392 - acc: 0.7627 - val_loss: 0.5723 - val_acc: 0.7267\n",
      "Epoch 186/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.5450 - acc: 0.7587 - val_loss: 0.5711 - val_acc: 0.7267\n",
      "Epoch 187/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.5503 - acc: 0.7576 - val_loss: 0.5707 - val_acc: 0.7267\n",
      "Epoch 188/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5418 - acc: 0.7719 - val_loss: 0.5709 - val_acc: 0.7267\n",
      "Epoch 189/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5362 - acc: 0.7800 - val_loss: 0.5701 - val_acc: 0.7300\n",
      "Epoch 190/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5439 - acc: 0.7546 - val_loss: 0.5691 - val_acc: 0.7300\n",
      "Epoch 191/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5371 - acc: 0.7597 - val_loss: 0.5682 - val_acc: 0.7333\n",
      "Epoch 192/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5316 - acc: 0.7627 - val_loss: 0.5683 - val_acc: 0.7333\n",
      "Epoch 193/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5381 - acc: 0.7678 - val_loss: 0.5666 - val_acc: 0.7367\n",
      "Epoch 194/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.5396 - acc: 0.7699 - val_loss: 0.5649 - val_acc: 0.7467\n",
      "Epoch 195/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5397 - acc: 0.7637 - val_loss: 0.5644 - val_acc: 0.7433\n",
      "Epoch 196/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5315 - acc: 0.7525 - val_loss: 0.5637 - val_acc: 0.7433\n",
      "Epoch 197/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.5305 - acc: 0.7648 - val_loss: 0.5623 - val_acc: 0.7467\n",
      "Epoch 198/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5304 - acc: 0.7709 - val_loss: 0.5601 - val_acc: 0.7333\n",
      "Epoch 199/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5276 - acc: 0.7841 - val_loss: 0.5598 - val_acc: 0.7367\n",
      "Epoch 200/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5293 - acc: 0.7637 - val_loss: 0.5599 - val_acc: 0.7500\n",
      "Epoch 201/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5317 - acc: 0.7658 - val_loss: 0.5581 - val_acc: 0.7367\n",
      "Epoch 202/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5238 - acc: 0.7770 - val_loss: 0.5583 - val_acc: 0.7500\n",
      "Epoch 203/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5239 - acc: 0.7760 - val_loss: 0.5584 - val_acc: 0.7500\n",
      "Epoch 204/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5305 - acc: 0.7505 - val_loss: 0.5575 - val_acc: 0.7500\n",
      "Epoch 205/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5271 - acc: 0.7617 - val_loss: 0.5567 - val_acc: 0.7500\n",
      "Epoch 206/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5225 - acc: 0.7821 - val_loss: 0.5564 - val_acc: 0.7467\n",
      "Epoch 207/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5263 - acc: 0.7688 - val_loss: 0.5561 - val_acc: 0.7467\n",
      "Epoch 208/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5277 - acc: 0.7627 - val_loss: 0.5572 - val_acc: 0.7433\n",
      "Epoch 209/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5221 - acc: 0.7780 - val_loss: 0.5551 - val_acc: 0.7467\n",
      "Epoch 210/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5286 - acc: 0.7576 - val_loss: 0.5541 - val_acc: 0.7467\n",
      "Epoch 211/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5183 - acc: 0.7749 - val_loss: 0.5543 - val_acc: 0.7467\n",
      "Epoch 212/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5252 - acc: 0.7658 - val_loss: 0.5529 - val_acc: 0.7467\n",
      "Epoch 213/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5296 - acc: 0.7525 - val_loss: 0.5521 - val_acc: 0.7467\n",
      "Epoch 214/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5112 - acc: 0.7678 - val_loss: 0.5520 - val_acc: 0.7467\n",
      "Epoch 215/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5134 - acc: 0.7790 - val_loss: 0.5505 - val_acc: 0.7467\n",
      "Epoch 216/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5151 - acc: 0.7719 - val_loss: 0.5500 - val_acc: 0.7467\n",
      "Epoch 217/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5203 - acc: 0.7790 - val_loss: 0.5491 - val_acc: 0.7467\n",
      "Epoch 218/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5047 - acc: 0.7790 - val_loss: 0.5475 - val_acc: 0.7500\n",
      "Epoch 219/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.5155 - acc: 0.7709 - val_loss: 0.5472 - val_acc: 0.7500\n",
      "Epoch 220/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5136 - acc: 0.7699 - val_loss: 0.5472 - val_acc: 0.7467\n",
      "Epoch 221/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5230 - acc: 0.7648 - val_loss: 0.5472 - val_acc: 0.7467\n",
      "Epoch 222/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5081 - acc: 0.7821 - val_loss: 0.5468 - val_acc: 0.7467\n",
      "Epoch 223/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5170 - acc: 0.7637 - val_loss: 0.5454 - val_acc: 0.7500\n",
      "Epoch 224/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5143 - acc: 0.7739 - val_loss: 0.5456 - val_acc: 0.7500\n",
      "Epoch 225/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5128 - acc: 0.7678 - val_loss: 0.5443 - val_acc: 0.7500\n",
      "Epoch 226/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5039 - acc: 0.7821 - val_loss: 0.5440 - val_acc: 0.7500\n",
      "Epoch 227/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5072 - acc: 0.7872 - val_loss: 0.5433 - val_acc: 0.7500\n",
      "Epoch 228/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5043 - acc: 0.7729 - val_loss: 0.5434 - val_acc: 0.7500\n",
      "Epoch 229/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5057 - acc: 0.7699 - val_loss: 0.5420 - val_acc: 0.7500\n",
      "Epoch 230/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5076 - acc: 0.7699 - val_loss: 0.5414 - val_acc: 0.7467\n",
      "Epoch 231/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4991 - acc: 0.7821 - val_loss: 0.5414 - val_acc: 0.7500\n",
      "Epoch 232/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4994 - acc: 0.7800 - val_loss: 0.5425 - val_acc: 0.7467\n",
      "Epoch 233/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4917 - acc: 0.7862 - val_loss: 0.5408 - val_acc: 0.7500\n",
      "Epoch 234/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5045 - acc: 0.7821 - val_loss: 0.5403 - val_acc: 0.7500\n",
      "Epoch 235/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5017 - acc: 0.7862 - val_loss: 0.5378 - val_acc: 0.7567\n",
      "Epoch 236/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4946 - acc: 0.7902 - val_loss: 0.5377 - val_acc: 0.7533\n",
      "Epoch 237/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.5057 - acc: 0.7648 - val_loss: 0.5383 - val_acc: 0.7500\n",
      "Epoch 238/700\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4877 - acc: 0.7862 - val_loss: 0.5371 - val_acc: 0.7500\n",
      "Epoch 239/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4923 - acc: 0.7862 - val_loss: 0.5376 - val_acc: 0.7500\n",
      "Epoch 240/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4970 - acc: 0.7800 - val_loss: 0.5368 - val_acc: 0.7467\n",
      "Epoch 241/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.4933 - acc: 0.7851 - val_loss: 0.5358 - val_acc: 0.7500\n",
      "Epoch 242/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4918 - acc: 0.7851 - val_loss: 0.5343 - val_acc: 0.7600\n",
      "Epoch 243/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4931 - acc: 0.7770 - val_loss: 0.5338 - val_acc: 0.7567\n",
      "Epoch 244/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4905 - acc: 0.7831 - val_loss: 0.5333 - val_acc: 0.7567\n",
      "Epoch 245/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4838 - acc: 0.8086 - val_loss: 0.5335 - val_acc: 0.7500\n",
      "Epoch 246/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.4949 - acc: 0.7780 - val_loss: 0.5330 - val_acc: 0.7500\n",
      "Epoch 247/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4887 - acc: 0.7831 - val_loss: 0.5338 - val_acc: 0.7467\n",
      "Epoch 248/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4910 - acc: 0.7851 - val_loss: 0.5323 - val_acc: 0.7500\n",
      "Epoch 249/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4829 - acc: 0.7882 - val_loss: 0.5314 - val_acc: 0.7533\n",
      "Epoch 250/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4866 - acc: 0.7688 - val_loss: 0.5316 - val_acc: 0.7500\n",
      "Epoch 251/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4930 - acc: 0.7923 - val_loss: 0.5322 - val_acc: 0.7467\n",
      "Epoch 252/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4854 - acc: 0.7943 - val_loss: 0.5329 - val_acc: 0.7433\n",
      "Epoch 253/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4925 - acc: 0.7862 - val_loss: 0.5338 - val_acc: 0.7500\n",
      "Epoch 254/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4809 - acc: 0.7963 - val_loss: 0.5330 - val_acc: 0.7500\n",
      "Epoch 255/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4729 - acc: 0.7994 - val_loss: 0.5321 - val_acc: 0.7467\n",
      "Epoch 256/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4942 - acc: 0.7882 - val_loss: 0.5305 - val_acc: 0.7467\n",
      "Epoch 257/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4866 - acc: 0.8035 - val_loss: 0.5300 - val_acc: 0.7500\n",
      "Epoch 258/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4747 - acc: 0.8055 - val_loss: 0.5287 - val_acc: 0.7500\n",
      "Epoch 259/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4783 - acc: 0.7974 - val_loss: 0.5275 - val_acc: 0.7467\n",
      "Epoch 260/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4784 - acc: 0.7963 - val_loss: 0.5271 - val_acc: 0.7467\n",
      "Epoch 261/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4741 - acc: 0.8086 - val_loss: 0.5278 - val_acc: 0.7500\n",
      "Epoch 262/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4836 - acc: 0.7872 - val_loss: 0.5280 - val_acc: 0.7500\n",
      "Epoch 263/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4642 - acc: 0.8024 - val_loss: 0.5283 - val_acc: 0.7533\n",
      "Epoch 264/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4892 - acc: 0.7739 - val_loss: 0.5277 - val_acc: 0.7533\n",
      "Epoch 265/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4620 - acc: 0.8024 - val_loss: 0.5279 - val_acc: 0.7533\n",
      "Epoch 266/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4697 - acc: 0.8004 - val_loss: 0.5293 - val_acc: 0.7500\n",
      "Epoch 267/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4738 - acc: 0.7994 - val_loss: 0.5286 - val_acc: 0.7500\n",
      "Epoch 268/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4788 - acc: 0.7912 - val_loss: 0.5275 - val_acc: 0.7500\n",
      "Epoch 269/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4856 - acc: 0.7811 - val_loss: 0.5277 - val_acc: 0.7500\n",
      "Epoch 270/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4824 - acc: 0.7933 - val_loss: 0.5276 - val_acc: 0.7500\n",
      "Epoch 271/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4731 - acc: 0.7974 - val_loss: 0.5259 - val_acc: 0.7533\n",
      "Epoch 272/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4686 - acc: 0.7953 - val_loss: 0.5249 - val_acc: 0.7567\n",
      "Epoch 273/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4701 - acc: 0.8004 - val_loss: 0.5234 - val_acc: 0.7567\n",
      "Epoch 274/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4760 - acc: 0.7902 - val_loss: 0.5234 - val_acc: 0.7567\n",
      "Epoch 275/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4714 - acc: 0.7851 - val_loss: 0.5234 - val_acc: 0.7600\n",
      "Epoch 276/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4684 - acc: 0.7912 - val_loss: 0.5233 - val_acc: 0.7600\n",
      "Epoch 277/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4665 - acc: 0.7984 - val_loss: 0.5223 - val_acc: 0.7567\n",
      "Epoch 278/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4744 - acc: 0.7943 - val_loss: 0.5224 - val_acc: 0.7600\n",
      "Epoch 279/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4745 - acc: 0.7923 - val_loss: 0.5224 - val_acc: 0.7600\n",
      "Epoch 280/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4695 - acc: 0.7892 - val_loss: 0.5218 - val_acc: 0.7600\n",
      "Epoch 281/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4734 - acc: 0.7994 - val_loss: 0.5225 - val_acc: 0.7600\n",
      "Epoch 282/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4596 - acc: 0.8045 - val_loss: 0.5217 - val_acc: 0.7600\n",
      "Epoch 283/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4616 - acc: 0.8014 - val_loss: 0.5214 - val_acc: 0.7600\n",
      "Epoch 284/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4700 - acc: 0.7872 - val_loss: 0.5206 - val_acc: 0.7600\n",
      "Epoch 285/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4571 - acc: 0.8177 - val_loss: 0.5192 - val_acc: 0.7567\n",
      "Epoch 286/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4649 - acc: 0.7882 - val_loss: 0.5181 - val_acc: 0.7600\n",
      "Epoch 287/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4719 - acc: 0.8014 - val_loss: 0.5195 - val_acc: 0.7567\n",
      "Epoch 288/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4542 - acc: 0.8106 - val_loss: 0.5177 - val_acc: 0.7600\n",
      "Epoch 289/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4484 - acc: 0.8035 - val_loss: 0.5184 - val_acc: 0.7567\n",
      "Epoch 290/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.4641 - acc: 0.7902 - val_loss: 0.5192 - val_acc: 0.7567\n",
      "Epoch 291/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.4510 - acc: 0.8177 - val_loss: 0.5184 - val_acc: 0.7567\n",
      "Epoch 292/700\n",
      "982/982 [==============================] - 0s 12us/sample - loss: 0.4485 - acc: 0.8126 - val_loss: 0.5180 - val_acc: 0.7567\n",
      "Epoch 293/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.4630 - acc: 0.7892 - val_loss: 0.5181 - val_acc: 0.7567\n",
      "Epoch 294/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4639 - acc: 0.8086 - val_loss: 0.5171 - val_acc: 0.7600\n",
      "Epoch 295/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4371 - acc: 0.8075 - val_loss: 0.5171 - val_acc: 0.7600\n",
      "Epoch 296/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4519 - acc: 0.7994 - val_loss: 0.5167 - val_acc: 0.7600\n",
      "Epoch 297/700\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4522 - acc: 0.8086 - val_loss: 0.5172 - val_acc: 0.7567\n",
      "Epoch 298/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4702 - acc: 0.7892 - val_loss: 0.5170 - val_acc: 0.7567\n",
      "Epoch 299/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4457 - acc: 0.8075 - val_loss: 0.5181 - val_acc: 0.7567\n",
      "Epoch 300/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4521 - acc: 0.8126 - val_loss: 0.5199 - val_acc: 0.7600\n",
      "Epoch 301/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4520 - acc: 0.8014 - val_loss: 0.5184 - val_acc: 0.7533\n",
      "Epoch 302/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4541 - acc: 0.7953 - val_loss: 0.5167 - val_acc: 0.7533\n",
      "Epoch 303/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4736 - acc: 0.7821 - val_loss: 0.5162 - val_acc: 0.7567\n",
      "Epoch 304/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4598 - acc: 0.7923 - val_loss: 0.5159 - val_acc: 0.7567\n",
      "Epoch 305/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4536 - acc: 0.8177 - val_loss: 0.5153 - val_acc: 0.7600\n",
      "Epoch 306/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4602 - acc: 0.8035 - val_loss: 0.5152 - val_acc: 0.7600\n",
      "Epoch 307/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4534 - acc: 0.8065 - val_loss: 0.5155 - val_acc: 0.7567\n",
      "Epoch 308/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4471 - acc: 0.7963 - val_loss: 0.5160 - val_acc: 0.7533\n",
      "Epoch 309/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4633 - acc: 0.8045 - val_loss: 0.5158 - val_acc: 0.7533\n",
      "Epoch 310/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4495 - acc: 0.8126 - val_loss: 0.5142 - val_acc: 0.7567\n",
      "Epoch 311/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4544 - acc: 0.8096 - val_loss: 0.5164 - val_acc: 0.7567\n",
      "Epoch 312/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4577 - acc: 0.8045 - val_loss: 0.5164 - val_acc: 0.7567\n",
      "Epoch 313/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4549 - acc: 0.7912 - val_loss: 0.5142 - val_acc: 0.7533\n",
      "Epoch 314/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4487 - acc: 0.8075 - val_loss: 0.5154 - val_acc: 0.7500\n",
      "Epoch 315/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4713 - acc: 0.7831 - val_loss: 0.5139 - val_acc: 0.7500\n",
      "Epoch 316/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4468 - acc: 0.8208 - val_loss: 0.5141 - val_acc: 0.7500\n",
      "Epoch 317/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4542 - acc: 0.8096 - val_loss: 0.5159 - val_acc: 0.7567\n",
      "Epoch 318/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4352 - acc: 0.8147 - val_loss: 0.5152 - val_acc: 0.7533\n",
      "Epoch 319/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4509 - acc: 0.7974 - val_loss: 0.5166 - val_acc: 0.7567\n",
      "Epoch 320/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4493 - acc: 0.8177 - val_loss: 0.5151 - val_acc: 0.7533\n",
      "Epoch 321/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4466 - acc: 0.8035 - val_loss: 0.5160 - val_acc: 0.7567\n",
      "Epoch 322/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4540 - acc: 0.8014 - val_loss: 0.5150 - val_acc: 0.7533\n",
      "Epoch 323/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4475 - acc: 0.8136 - val_loss: 0.5143 - val_acc: 0.7500\n",
      "Epoch 324/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4345 - acc: 0.8228 - val_loss: 0.5139 - val_acc: 0.7500\n",
      "Epoch 325/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4466 - acc: 0.8075 - val_loss: 0.5133 - val_acc: 0.7533\n",
      "Epoch 326/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4408 - acc: 0.8116 - val_loss: 0.5140 - val_acc: 0.7500\n",
      "Epoch 327/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4504 - acc: 0.8086 - val_loss: 0.5136 - val_acc: 0.7533\n",
      "Epoch 328/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4486 - acc: 0.8086 - val_loss: 0.5127 - val_acc: 0.7567\n",
      "Epoch 329/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4393 - acc: 0.8177 - val_loss: 0.5135 - val_acc: 0.7533\n",
      "Epoch 330/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4365 - acc: 0.8157 - val_loss: 0.5134 - val_acc: 0.7533\n",
      "Epoch 331/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4449 - acc: 0.8147 - val_loss: 0.5132 - val_acc: 0.7533\n",
      "Epoch 332/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4421 - acc: 0.8198 - val_loss: 0.5138 - val_acc: 0.7500\n",
      "Epoch 333/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4478 - acc: 0.8075 - val_loss: 0.5132 - val_acc: 0.7533\n",
      "Epoch 334/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4478 - acc: 0.8004 - val_loss: 0.5121 - val_acc: 0.7567\n",
      "Epoch 335/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4457 - acc: 0.8187 - val_loss: 0.5121 - val_acc: 0.7567\n",
      "Epoch 336/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4510 - acc: 0.8014 - val_loss: 0.5118 - val_acc: 0.7533\n",
      "Epoch 337/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4415 - acc: 0.8024 - val_loss: 0.5127 - val_acc: 0.7533\n",
      "Epoch 338/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4287 - acc: 0.8055 - val_loss: 0.5134 - val_acc: 0.7533\n",
      "Epoch 339/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.4404 - acc: 0.8096 - val_loss: 0.5147 - val_acc: 0.7567\n",
      "Epoch 340/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4448 - acc: 0.7984 - val_loss: 0.5149 - val_acc: 0.7533\n",
      "Epoch 341/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4478 - acc: 0.8045 - val_loss: 0.5137 - val_acc: 0.7567\n",
      "Epoch 342/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4411 - acc: 0.8045 - val_loss: 0.5139 - val_acc: 0.7567\n",
      "Epoch 343/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4354 - acc: 0.8147 - val_loss: 0.5136 - val_acc: 0.7567\n",
      "Epoch 344/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4368 - acc: 0.8096 - val_loss: 0.5138 - val_acc: 0.7567\n",
      "Epoch 345/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4357 - acc: 0.7974 - val_loss: 0.5164 - val_acc: 0.7500\n",
      "Epoch 346/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4388 - acc: 0.7862 - val_loss: 0.5132 - val_acc: 0.7533\n",
      "Epoch 347/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4233 - acc: 0.8299 - val_loss: 0.5129 - val_acc: 0.7567\n",
      "Epoch 348/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4345 - acc: 0.8024 - val_loss: 0.5111 - val_acc: 0.7567\n",
      "Epoch 349/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4370 - acc: 0.8045 - val_loss: 0.5117 - val_acc: 0.7567\n",
      "Epoch 350/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4421 - acc: 0.8116 - val_loss: 0.5099 - val_acc: 0.7567\n",
      "Epoch 351/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4296 - acc: 0.8248 - val_loss: 0.5107 - val_acc: 0.7533\n",
      "Epoch 352/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4275 - acc: 0.8126 - val_loss: 0.5088 - val_acc: 0.7567\n",
      "Epoch 353/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4308 - acc: 0.8269 - val_loss: 0.5101 - val_acc: 0.7533\n",
      "Epoch 354/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4295 - acc: 0.8106 - val_loss: 0.5098 - val_acc: 0.7567\n",
      "Epoch 355/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4411 - acc: 0.8126 - val_loss: 0.5106 - val_acc: 0.7567\n",
      "Epoch 356/700\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4265 - acc: 0.8045 - val_loss: 0.5107 - val_acc: 0.7567\n",
      "Epoch 357/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4366 - acc: 0.8086 - val_loss: 0.5101 - val_acc: 0.7533\n",
      "Epoch 358/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4243 - acc: 0.8106 - val_loss: 0.5093 - val_acc: 0.7567\n",
      "Epoch 359/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4309 - acc: 0.8218 - val_loss: 0.5086 - val_acc: 0.7567\n",
      "Epoch 360/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4210 - acc: 0.8259 - val_loss: 0.5095 - val_acc: 0.7567\n",
      "Epoch 361/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4333 - acc: 0.8208 - val_loss: 0.5096 - val_acc: 0.7567\n",
      "Epoch 362/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4322 - acc: 0.8106 - val_loss: 0.5089 - val_acc: 0.7567\n",
      "Epoch 363/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4281 - acc: 0.8045 - val_loss: 0.5096 - val_acc: 0.7567\n",
      "Epoch 364/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.4275 - acc: 0.8055 - val_loss: 0.5094 - val_acc: 0.7567\n",
      "Epoch 365/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4140 - acc: 0.8228 - val_loss: 0.5090 - val_acc: 0.7567\n",
      "Epoch 366/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4357 - acc: 0.8075 - val_loss: 0.5099 - val_acc: 0.7567\n",
      "Epoch 367/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.4383 - acc: 0.8065 - val_loss: 0.5102 - val_acc: 0.7567\n",
      "Epoch 368/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4339 - acc: 0.8055 - val_loss: 0.5105 - val_acc: 0.7567\n",
      "Epoch 369/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4422 - acc: 0.8004 - val_loss: 0.5090 - val_acc: 0.7567\n",
      "Epoch 370/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4387 - acc: 0.8136 - val_loss: 0.5090 - val_acc: 0.7567\n",
      "Epoch 371/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4235 - acc: 0.8208 - val_loss: 0.5085 - val_acc: 0.7567\n",
      "Epoch 372/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4308 - acc: 0.8187 - val_loss: 0.5085 - val_acc: 0.7567\n",
      "Epoch 373/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4249 - acc: 0.8238 - val_loss: 0.5090 - val_acc: 0.7567\n",
      "Epoch 374/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4235 - acc: 0.8208 - val_loss: 0.5089 - val_acc: 0.7567\n",
      "Epoch 375/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4251 - acc: 0.8096 - val_loss: 0.5091 - val_acc: 0.7567\n",
      "Epoch 376/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4233 - acc: 0.8289 - val_loss: 0.5088 - val_acc: 0.7567\n",
      "Epoch 377/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.4283 - acc: 0.8289 - val_loss: 0.5084 - val_acc: 0.7567\n",
      "Epoch 378/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4347 - acc: 0.8075 - val_loss: 0.5080 - val_acc: 0.7567\n",
      "Epoch 379/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4119 - acc: 0.8187 - val_loss: 0.5083 - val_acc: 0.7567\n",
      "Epoch 380/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4349 - acc: 0.8126 - val_loss: 0.5091 - val_acc: 0.7567\n",
      "Epoch 381/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4229 - acc: 0.8136 - val_loss: 0.5085 - val_acc: 0.7567\n",
      "Epoch 382/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4321 - acc: 0.8086 - val_loss: 0.5078 - val_acc: 0.7567\n",
      "Epoch 383/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4196 - acc: 0.8228 - val_loss: 0.5079 - val_acc: 0.7567\n",
      "Epoch 384/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4189 - acc: 0.8218 - val_loss: 0.5082 - val_acc: 0.7600\n",
      "Epoch 385/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4136 - acc: 0.8269 - val_loss: 0.5096 - val_acc: 0.7567\n",
      "Epoch 386/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4314 - acc: 0.8035 - val_loss: 0.5094 - val_acc: 0.7567\n",
      "Epoch 387/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4139 - acc: 0.8198 - val_loss: 0.5102 - val_acc: 0.7533\n",
      "Epoch 388/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4160 - acc: 0.8269 - val_loss: 0.5096 - val_acc: 0.7567\n",
      "Epoch 389/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4244 - acc: 0.8086 - val_loss: 0.5100 - val_acc: 0.7533\n",
      "Epoch 390/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4260 - acc: 0.8147 - val_loss: 0.5090 - val_acc: 0.7567\n",
      "Epoch 391/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4391 - acc: 0.8014 - val_loss: 0.5104 - val_acc: 0.7533\n",
      "Epoch 392/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4060 - acc: 0.8310 - val_loss: 0.5109 - val_acc: 0.7533\n",
      "Epoch 393/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4173 - acc: 0.8228 - val_loss: 0.5114 - val_acc: 0.7533\n",
      "Epoch 394/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4107 - acc: 0.8248 - val_loss: 0.5095 - val_acc: 0.7533\n",
      "Epoch 395/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4132 - acc: 0.8299 - val_loss: 0.5098 - val_acc: 0.7533\n",
      "Epoch 396/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.4218 - acc: 0.8157 - val_loss: 0.5095 - val_acc: 0.7533\n",
      "Epoch 397/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4229 - acc: 0.8126 - val_loss: 0.5090 - val_acc: 0.7533\n",
      "Epoch 398/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4252 - acc: 0.8208 - val_loss: 0.5100 - val_acc: 0.7533\n",
      "Epoch 399/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4126 - acc: 0.8330 - val_loss: 0.5099 - val_acc: 0.7533\n",
      "Epoch 400/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4010 - acc: 0.8248 - val_loss: 0.5096 - val_acc: 0.7533\n",
      "Epoch 401/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4165 - acc: 0.8218 - val_loss: 0.5089 - val_acc: 0.7533\n",
      "Epoch 402/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4296 - acc: 0.8218 - val_loss: 0.5092 - val_acc: 0.7533\n",
      "Epoch 403/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4083 - acc: 0.8096 - val_loss: 0.5101 - val_acc: 0.7533\n",
      "Epoch 404/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4069 - acc: 0.8075 - val_loss: 0.5095 - val_acc: 0.7533\n",
      "Epoch 405/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4221 - acc: 0.8157 - val_loss: 0.5089 - val_acc: 0.7533\n",
      "Epoch 406/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4087 - acc: 0.8350 - val_loss: 0.5098 - val_acc: 0.7533\n",
      "Epoch 407/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.4110 - acc: 0.8147 - val_loss: 0.5091 - val_acc: 0.7533\n",
      "Epoch 408/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4084 - acc: 0.8238 - val_loss: 0.5096 - val_acc: 0.7533\n",
      "Epoch 409/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4115 - acc: 0.8147 - val_loss: 0.5084 - val_acc: 0.7533\n",
      "Epoch 410/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4111 - acc: 0.8218 - val_loss: 0.5080 - val_acc: 0.7533\n",
      "Epoch 411/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4121 - acc: 0.8340 - val_loss: 0.5074 - val_acc: 0.7533\n",
      "Epoch 412/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4046 - acc: 0.8360 - val_loss: 0.5077 - val_acc: 0.7533\n",
      "Epoch 413/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4127 - acc: 0.8126 - val_loss: 0.5079 - val_acc: 0.7567\n",
      "Epoch 414/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4212 - acc: 0.8269 - val_loss: 0.5079 - val_acc: 0.7533\n",
      "Epoch 415/700\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4297 - acc: 0.8055 - val_loss: 0.5078 - val_acc: 0.7500\n",
      "Epoch 416/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4177 - acc: 0.8218 - val_loss: 0.5083 - val_acc: 0.7533\n",
      "Epoch 417/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4109 - acc: 0.8208 - val_loss: 0.5088 - val_acc: 0.7533\n",
      "Epoch 418/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4125 - acc: 0.8238 - val_loss: 0.5089 - val_acc: 0.7567\n",
      "Epoch 419/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3971 - acc: 0.8360 - val_loss: 0.5086 - val_acc: 0.7533\n",
      "Epoch 420/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4111 - acc: 0.8218 - val_loss: 0.5072 - val_acc: 0.7567\n",
      "Epoch 421/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.4148 - acc: 0.8218 - val_loss: 0.5072 - val_acc: 0.7533\n",
      "Epoch 422/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.4215 - acc: 0.8167 - val_loss: 0.5081 - val_acc: 0.7533\n",
      "Epoch 423/700\n",
      "982/982 [==============================] - 0s 13us/sample - loss: 0.4156 - acc: 0.8208 - val_loss: 0.5082 - val_acc: 0.7533\n",
      "Epoch 424/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4138 - acc: 0.8065 - val_loss: 0.5096 - val_acc: 0.7567\n",
      "Epoch 425/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4202 - acc: 0.8177 - val_loss: 0.5088 - val_acc: 0.7567\n",
      "Epoch 426/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3935 - acc: 0.8452 - val_loss: 0.5079 - val_acc: 0.7533\n",
      "Epoch 427/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4122 - acc: 0.8228 - val_loss: 0.5085 - val_acc: 0.7567\n",
      "Epoch 428/700\n",
      "982/982 [==============================] - 0s 19us/sample - loss: 0.4171 - acc: 0.8248 - val_loss: 0.5080 - val_acc: 0.7533\n",
      "Epoch 429/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4142 - acc: 0.8136 - val_loss: 0.5069 - val_acc: 0.7600\n",
      "Epoch 430/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3931 - acc: 0.8310 - val_loss: 0.5071 - val_acc: 0.7567\n",
      "Epoch 431/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4201 - acc: 0.8157 - val_loss: 0.5076 - val_acc: 0.7500\n",
      "Epoch 432/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4109 - acc: 0.8167 - val_loss: 0.5078 - val_acc: 0.7533\n",
      "Epoch 433/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4037 - acc: 0.8248 - val_loss: 0.5074 - val_acc: 0.7567\n",
      "Epoch 434/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4159 - acc: 0.8248 - val_loss: 0.5085 - val_acc: 0.7567\n",
      "Epoch 435/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4001 - acc: 0.8360 - val_loss: 0.5085 - val_acc: 0.7567\n",
      "Epoch 436/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4175 - acc: 0.8167 - val_loss: 0.5083 - val_acc: 0.7533\n",
      "Epoch 437/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4204 - acc: 0.8157 - val_loss: 0.5077 - val_acc: 0.7567\n",
      "Epoch 438/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4096 - acc: 0.8269 - val_loss: 0.5080 - val_acc: 0.7567\n",
      "Epoch 439/700\n",
      "982/982 [==============================] - 0s 18us/sample - loss: 0.4040 - acc: 0.8299 - val_loss: 0.5082 - val_acc: 0.7533\n",
      "Epoch 440/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.4092 - acc: 0.8289 - val_loss: 0.5080 - val_acc: 0.7567\n",
      "Epoch 441/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.3998 - acc: 0.8248 - val_loss: 0.5075 - val_acc: 0.7600\n",
      "Epoch 442/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4013 - acc: 0.8330 - val_loss: 0.5075 - val_acc: 0.7567\n",
      "Epoch 443/700\n",
      "982/982 [==============================] - 0s 18us/sample - loss: 0.4030 - acc: 0.8238 - val_loss: 0.5079 - val_acc: 0.7600\n",
      "Epoch 444/700\n",
      "982/982 [==============================] - 0s 18us/sample - loss: 0.4107 - acc: 0.8228 - val_loss: 0.5077 - val_acc: 0.7600\n",
      "Epoch 445/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.4105 - acc: 0.8238 - val_loss: 0.5081 - val_acc: 0.7567\n",
      "Epoch 446/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3997 - acc: 0.8269 - val_loss: 0.5077 - val_acc: 0.7600\n",
      "Epoch 447/700\n",
      "982/982 [==============================] - 0s 18us/sample - loss: 0.4052 - acc: 0.8187 - val_loss: 0.5083 - val_acc: 0.7600\n",
      "Epoch 448/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4151 - acc: 0.8259 - val_loss: 0.5088 - val_acc: 0.7600\n",
      "Epoch 449/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4056 - acc: 0.8259 - val_loss: 0.5088 - val_acc: 0.7600\n",
      "Epoch 450/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3981 - acc: 0.8310 - val_loss: 0.5087 - val_acc: 0.7600\n",
      "Epoch 451/700\n",
      "982/982 [==============================] - 0s 19us/sample - loss: 0.3912 - acc: 0.8391 - val_loss: 0.5085 - val_acc: 0.7633\n",
      "Epoch 452/700\n",
      "982/982 [==============================] - 0s 25us/sample - loss: 0.4021 - acc: 0.8167 - val_loss: 0.5083 - val_acc: 0.7600\n",
      "Epoch 453/700\n",
      "982/982 [==============================] - 0s 21us/sample - loss: 0.4039 - acc: 0.8320 - val_loss: 0.5081 - val_acc: 0.7600\n",
      "Epoch 454/700\n",
      "982/982 [==============================] - 0s 19us/sample - loss: 0.3969 - acc: 0.8269 - val_loss: 0.5075 - val_acc: 0.7633\n",
      "Epoch 455/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.4145 - acc: 0.8208 - val_loss: 0.5083 - val_acc: 0.7600\n",
      "Epoch 456/700\n",
      "982/982 [==============================] - 0s 18us/sample - loss: 0.3911 - acc: 0.8320 - val_loss: 0.5085 - val_acc: 0.7600\n",
      "Epoch 457/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4073 - acc: 0.8238 - val_loss: 0.5089 - val_acc: 0.7600\n",
      "Epoch 458/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4233 - acc: 0.8116 - val_loss: 0.5088 - val_acc: 0.7600\n",
      "Epoch 459/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.3968 - acc: 0.8330 - val_loss: 0.5079 - val_acc: 0.7600\n",
      "Epoch 460/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4048 - acc: 0.8198 - val_loss: 0.5079 - val_acc: 0.7600\n",
      "Epoch 461/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3929 - acc: 0.8360 - val_loss: 0.5077 - val_acc: 0.7600\n",
      "Epoch 462/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4043 - acc: 0.8279 - val_loss: 0.5081 - val_acc: 0.7600\n",
      "Epoch 463/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4130 - acc: 0.8126 - val_loss: 0.5076 - val_acc: 0.7600\n",
      "Epoch 464/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4049 - acc: 0.8299 - val_loss: 0.5078 - val_acc: 0.7600\n",
      "Epoch 465/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4072 - acc: 0.8320 - val_loss: 0.5073 - val_acc: 0.7600\n",
      "Epoch 466/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3999 - acc: 0.8371 - val_loss: 0.5074 - val_acc: 0.7600\n",
      "Epoch 467/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4189 - acc: 0.8330 - val_loss: 0.5076 - val_acc: 0.7567\n",
      "Epoch 468/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4084 - acc: 0.8350 - val_loss: 0.5084 - val_acc: 0.7600\n",
      "Epoch 469/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4020 - acc: 0.8218 - val_loss: 0.5080 - val_acc: 0.7600\n",
      "Epoch 470/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3914 - acc: 0.8360 - val_loss: 0.5080 - val_acc: 0.7600\n",
      "Epoch 471/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3949 - acc: 0.8422 - val_loss: 0.5085 - val_acc: 0.7600\n",
      "Epoch 472/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3952 - acc: 0.8269 - val_loss: 0.5088 - val_acc: 0.7567\n",
      "Epoch 473/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4078 - acc: 0.8238 - val_loss: 0.5091 - val_acc: 0.7567\n",
      "Epoch 474/700\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "982/982 [==============================] - 0s 14us/sample - loss: 0.3909 - acc: 0.8411 - val_loss: 0.5098 - val_acc: 0.7567\n",
      "Epoch 475/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4049 - acc: 0.8289 - val_loss: 0.5095 - val_acc: 0.7567\n",
      "Epoch 476/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4007 - acc: 0.8228 - val_loss: 0.5090 - val_acc: 0.7567\n",
      "Epoch 477/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3990 - acc: 0.8248 - val_loss: 0.5091 - val_acc: 0.7600\n",
      "Epoch 478/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3993 - acc: 0.8269 - val_loss: 0.5085 - val_acc: 0.7600\n",
      "Epoch 479/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3940 - acc: 0.8299 - val_loss: 0.5083 - val_acc: 0.7600\n",
      "Epoch 480/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3930 - acc: 0.8238 - val_loss: 0.5084 - val_acc: 0.7600\n",
      "Epoch 481/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4001 - acc: 0.8299 - val_loss: 0.5078 - val_acc: 0.7600\n",
      "Epoch 482/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4019 - acc: 0.8259 - val_loss: 0.5077 - val_acc: 0.7667\n",
      "Epoch 483/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3977 - acc: 0.8310 - val_loss: 0.5079 - val_acc: 0.7567\n",
      "Epoch 484/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4219 - acc: 0.8248 - val_loss: 0.5081 - val_acc: 0.7600\n",
      "Epoch 485/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3979 - acc: 0.8320 - val_loss: 0.5091 - val_acc: 0.7567\n",
      "Epoch 486/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3877 - acc: 0.8340 - val_loss: 0.5094 - val_acc: 0.7600\n",
      "Epoch 487/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4008 - acc: 0.8289 - val_loss: 0.5088 - val_acc: 0.7567\n",
      "Epoch 488/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3952 - acc: 0.8360 - val_loss: 0.5079 - val_acc: 0.7600\n",
      "Epoch 489/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3942 - acc: 0.8279 - val_loss: 0.5073 - val_acc: 0.7567\n",
      "Epoch 490/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.4025 - acc: 0.8228 - val_loss: 0.5072 - val_acc: 0.7567\n",
      "Epoch 491/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3991 - acc: 0.8320 - val_loss: 0.5076 - val_acc: 0.7567\n",
      "Epoch 492/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.3960 - acc: 0.8391 - val_loss: 0.5076 - val_acc: 0.7567\n",
      "Epoch 493/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3886 - acc: 0.8360 - val_loss: 0.5085 - val_acc: 0.7567\n",
      "Epoch 494/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4062 - acc: 0.8360 - val_loss: 0.5082 - val_acc: 0.7600\n",
      "Epoch 495/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3909 - acc: 0.8391 - val_loss: 0.5075 - val_acc: 0.7533\n",
      "Epoch 496/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.4109 - acc: 0.8320 - val_loss: 0.5072 - val_acc: 0.7567\n",
      "Epoch 497/700\n",
      "982/982 [==============================] - 0s 20us/sample - loss: 0.3791 - acc: 0.8360 - val_loss: 0.5073 - val_acc: 0.7633\n",
      "Epoch 498/700\n",
      "982/982 [==============================] - 0s 20us/sample - loss: 0.3812 - acc: 0.8411 - val_loss: 0.5073 - val_acc: 0.7633\n",
      "Epoch 499/700\n",
      "982/982 [==============================] - 0s 19us/sample - loss: 0.3995 - acc: 0.8238 - val_loss: 0.5071 - val_acc: 0.7667\n",
      "Epoch 500/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.3923 - acc: 0.8411 - val_loss: 0.5073 - val_acc: 0.7667\n",
      "Epoch 501/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3903 - acc: 0.8310 - val_loss: 0.5077 - val_acc: 0.7633\n",
      "Epoch 502/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3830 - acc: 0.8381 - val_loss: 0.5077 - val_acc: 0.7600\n",
      "Epoch 503/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3853 - acc: 0.8381 - val_loss: 0.5076 - val_acc: 0.7633\n",
      "Epoch 504/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3832 - acc: 0.8371 - val_loss: 0.5076 - val_acc: 0.7667\n",
      "Epoch 505/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.4026 - acc: 0.8208 - val_loss: 0.5076 - val_acc: 0.7633\n",
      "Epoch 506/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3884 - acc: 0.8289 - val_loss: 0.5074 - val_acc: 0.7633\n",
      "Epoch 507/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3875 - acc: 0.8391 - val_loss: 0.5076 - val_acc: 0.7633\n",
      "Epoch 508/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3896 - acc: 0.8279 - val_loss: 0.5077 - val_acc: 0.7633\n",
      "Epoch 509/700\n",
      "982/982 [==============================] - 0s 14us/sample - loss: 0.3818 - acc: 0.8350 - val_loss: 0.5077 - val_acc: 0.7600\n",
      "Epoch 510/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3864 - acc: 0.8320 - val_loss: 0.5081 - val_acc: 0.7533\n",
      "Epoch 511/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3960 - acc: 0.8289 - val_loss: 0.5087 - val_acc: 0.7533\n",
      "Epoch 512/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3958 - acc: 0.8381 - val_loss: 0.5099 - val_acc: 0.7567\n",
      "Epoch 513/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3916 - acc: 0.8289 - val_loss: 0.5094 - val_acc: 0.7533\n",
      "Epoch 514/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3915 - acc: 0.8289 - val_loss: 0.5087 - val_acc: 0.7533\n",
      "Epoch 515/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3972 - acc: 0.8228 - val_loss: 0.5086 - val_acc: 0.7533\n",
      "Epoch 516/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3956 - acc: 0.8360 - val_loss: 0.5077 - val_acc: 0.7567\n",
      "Epoch 517/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3950 - acc: 0.8208 - val_loss: 0.5079 - val_acc: 0.7600\n",
      "Epoch 518/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3832 - acc: 0.8340 - val_loss: 0.5081 - val_acc: 0.7600\n",
      "Epoch 519/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3856 - acc: 0.8208 - val_loss: 0.5081 - val_acc: 0.7567\n",
      "Epoch 520/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3792 - acc: 0.8432 - val_loss: 0.5083 - val_acc: 0.7567\n",
      "Epoch 521/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3865 - acc: 0.8248 - val_loss: 0.5090 - val_acc: 0.7567\n",
      "Epoch 522/700\n",
      "982/982 [==============================] - 0s 19us/sample - loss: 0.3810 - acc: 0.8462 - val_loss: 0.5088 - val_acc: 0.7567\n",
      "Epoch 523/700\n",
      "982/982 [==============================] - 0s 17us/sample - loss: 0.3862 - acc: 0.8391 - val_loss: 0.5086 - val_acc: 0.7567\n",
      "Epoch 524/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3930 - acc: 0.8340 - val_loss: 0.5084 - val_acc: 0.7600\n",
      "Epoch 525/700\n",
      "982/982 [==============================] - 0s 19us/sample - loss: 0.3917 - acc: 0.8371 - val_loss: 0.5084 - val_acc: 0.7567\n",
      "Epoch 526/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3897 - acc: 0.8350 - val_loss: 0.5083 - val_acc: 0.7633\n",
      "Epoch 527/700\n",
      "982/982 [==============================] - 0s 15us/sample - loss: 0.3964 - acc: 0.8238 - val_loss: 0.5082 - val_acc: 0.7567\n",
      "Epoch 528/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3952 - acc: 0.8248 - val_loss: 0.5082 - val_acc: 0.7567\n",
      "Epoch 529/700\n",
      "982/982 [==============================] - 0s 16us/sample - loss: 0.3740 - acc: 0.8422 - val_loss: 0.5083 - val_acc: 0.7600\n",
      "Epoch 00529: early stopping\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<tensorflow.python.keras.callbacks.History at 0x1c617bddd8>"
      ]
     },
     "execution_count": 642,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(X_train,y_train, epochs = 700, batch_size = 800,\n",
    "          validation_data= (X_test,y_test),callbacks = [early_stop] )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 643,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['loss', 'acc', 'val_loss', 'val_acc'], dtype='object')"
      ]
     },
     "execution_count": 643,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(model.history.history).columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 644,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c61a665c0>"
      ]
     },
     "execution_count": 644,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.DataFrame(model.history.history)[['loss','val_loss']].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 645,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c61ae1358>"
      ]
     },
     "execution_count": 645,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.DataFrame(model.history.history)[['acc','val_acc']].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 648,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import accuracy_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 649,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The accuracy score achieved using Neural Network is: 76.0 %\n"
     ]
    }
   ],
   "source": [
    "Y_pred_nn = model.predict_classes(X_test)\n",
    "score_nn = round(accuracy_score(Y_pred_nn,y_test)*100,2)\n",
    "\n",
    "print(\"The accuracy score achieved using Neural Network is: \"+str(score_nn)+\" %\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Explanations \n",
    "* optimisers \n",
    "* overfitting \n",
    "https://www.kdnuggets.com/2019/08/numpy-neural-networks-computational-graphs.html\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 650,
   "metadata": {},
   "outputs": [],
   "source": [
    "# https://mlfromscratch.com/optimizers-explained/#/\n",
    "# https://towardsdatascience.com/preventing-deep-neural-network-from-overfitting-953458db800a\n",
    "# https://machinelearningmastery.com/how-to-reduce-overfitting-in-deep-neural-networks-with-weight-constraints-in-keras/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 619,
   "metadata": {},
   "outputs": [],
   "source": [
    "# code here"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 594,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting eli5\n",
      "  Downloading eli5-0.10.1-py2.py3-none-any.whl (105 kB)\n",
      "\u001b[K     |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 105 kB 199 kB/s eta 0:00:01\n",
      "\u001b[?25hRequirement already satisfied: scikit-learn>=0.18 in /Users/eswaroo/anaconda3/lib/python3.7/site-packages (from eli5) (0.23.1)\n",
      "Requirement already satisfied: scipy in /Users/eswaroo/anaconda3/lib/python3.7/site-packages (from eli5) (1.3.0)\n",
      "Collecting tabulate>=0.7.7\n",
      "  Downloading tabulate-0.8.7-py3-none-any.whl (24 kB)\n",
      "Requirement already satisfied: jinja2 in /Users/eswaroo/anaconda3/lib/python3.7/site-packages (from eli5) (2.10.1)\n",
      "Requirement already satisfied: graphviz in /Users/eswaroo/anaconda3/lib/python3.7/site-packages (from eli5) (0.13.2)\n",
      "Requirement already satisfied: numpy>=1.9.0 in /Users/eswaroo/anaconda3/lib/python3.7/site-packages (from eli5) (1.16.4)\n",
      "Requirement already satisfied: attrs>16.0.0 in /Users/eswaroo/anaconda3/lib/python3.7/site-packages (from eli5) (19.1.0)\n",
      "Requirement already satisfied: six in /Users/eswaroo/anaconda3/lib/python3.7/site-packages (from eli5) (1.12.0)\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in /Users/eswaroo/anaconda3/lib/python3.7/site-packages (from scikit-learn>=0.18->eli5) (2.1.0)\n",
      "Requirement already satisfied: joblib>=0.11 in /Users/eswaroo/anaconda3/lib/python3.7/site-packages (from scikit-learn>=0.18->eli5) (0.13.2)\n",
      "Requirement already satisfied: MarkupSafe>=0.23 in /Users/eswaroo/anaconda3/lib/python3.7/site-packages (from jinja2->eli5) (1.1.1)\n",
      "Installing collected packages: tabulate, eli5\n",
      "Successfully installed eli5-0.10.1 tabulate-0.8.7\n"
     ]
    }
   ],
   "source": [
    "! pip install eli5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 598,
   "metadata": {},
   "outputs": [],
   "source": [
    "import eli5\n",
    "from eli5.sklearn import PermutationImportance\n",
    "from eli5.permutation_importance import get_score_importances"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 603,
   "metadata": {},
   "outputs": [],
   "source": [
    "# X.columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 608,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import make_scorer\n",
    "from sklearn.metrics import accuracy_score, precision_score, recall_score\n",
    "\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "scorers = {\n",
    "#         'precision_score': make_scorer(precision_score),\n",
    "#         'recall_score': make_scorer(recall_score),\n",
    "        'accuracy_score': make_scorer(accuracy_score)\n",
    "        }\n",
    "# grid_search_cv=GridSearchCV(model,param_grid,verbose=1,cv=3,scoring=scorers,refit=\"precision_score\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 610,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Classification metrics can't handle a mix of binary and continuous targets",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-610-c92665d6059c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mperm\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mPermutationImportance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mscoring\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmake_scorer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maccuracy_score\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0meli5\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow_weights\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mperm\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeature_names\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtolist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/eli5/sklearn/permutation_importance.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, groups, **fit_params)\u001b[0m\n\u001b[1;32m    200\u001b[0m             \u001b[0msi\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_cv_scores_importances\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgroups\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mgroups\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mfit_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    201\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 202\u001b[0;31m             \u001b[0msi\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_non_cv_scores_importances\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    203\u001b[0m         \u001b[0mscores\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msi\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    204\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscores_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscores\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/eli5/sklearn/permutation_importance.py\u001b[0m in \u001b[0;36m_non_cv_scores_importances\u001b[0;34m(self, X, y)\u001b[0m\n\u001b[1;32m    224\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_non_cv_scores_importances\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    225\u001b[0m         \u001b[0mscore_func\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpartial\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscorer_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrapped_estimator_\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 226\u001b[0;31m         \u001b[0mbase_score\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mimportances\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_score_importances\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscore_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    227\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mbase_score\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimportances\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mimportances\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    228\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/eli5/sklearn/permutation_importance.py\u001b[0m in \u001b[0;36m_get_score_importances\u001b[0;34m(self, score_func, X, y)\u001b[0m\n\u001b[1;32m    229\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_get_score_importances\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscore_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    230\u001b[0m         return get_score_importances(score_func, X, y, n_iter=self.n_iter,\n\u001b[0;32m--> 231\u001b[0;31m                                      random_state=self.rng_)\n\u001b[0m\u001b[1;32m    232\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    233\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/eli5/permutation_importance.py\u001b[0m in \u001b[0;36mget_score_importances\u001b[0;34m(score_func, X, y, n_iter, columns_to_shuffle, random_state)\u001b[0m\n\u001b[1;32m     84\u001b[0m     \"\"\"\n\u001b[1;32m     85\u001b[0m     \u001b[0mrng\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_random_state\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrandom_state\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 86\u001b[0;31m     \u001b[0mbase_score\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mscore_func\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     87\u001b[0m     \u001b[0mscores_decreases\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     88\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_iter\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/sklearn/metrics/_scorer.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, estimator, X, y_true, sample_weight)\u001b[0m\n\u001b[1;32m    168\u001b[0m                           stacklevel=2)\n\u001b[1;32m    169\u001b[0m         return self._score(partial(_cached_call, None), estimator, X, y_true,\n\u001b[0;32m--> 170\u001b[0;31m                            sample_weight=sample_weight)\n\u001b[0m\u001b[1;32m    171\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    172\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_factory_args\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/sklearn/metrics/_scorer.py\u001b[0m in \u001b[0;36m_score\u001b[0;34m(self, method_caller, estimator, X, y_true, sample_weight)\u001b[0m\n\u001b[1;32m    211\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m             return self._sign * self._score_func(y_true, y_pred,\n\u001b[0;32m--> 213\u001b[0;31m                                                  **self._kwargs)\n\u001b[0m\u001b[1;32m    214\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36minner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     71\u001b[0m                           FutureWarning)\n\u001b[1;32m     72\u001b[0m         \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 73\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     74\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0minner_f\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36maccuracy_score\u001b[0;34m(y_true, y_pred, normalize, sample_weight)\u001b[0m\n\u001b[1;32m    185\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    186\u001b[0m     \u001b[0;31m# Compute accuracy for each possible representation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 187\u001b[0;31m     \u001b[0my_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_check_targets\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    188\u001b[0m     \u001b[0mcheck_consistent_length\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    189\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0my_type\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstartswith\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'multilabel'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36m_check_targets\u001b[0;34m(y_true, y_pred)\u001b[0m\n\u001b[1;32m     89\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_type\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     90\u001b[0m         raise ValueError(\"Classification metrics can't handle a mix of {0} \"\n\u001b[0;32m---> 91\u001b[0;31m                          \"and {1} targets\".format(type_true, type_pred))\n\u001b[0m\u001b[1;32m     92\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m     \u001b[0;31m# We can't have more than one value on y_type => The set is no more needed\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: Classification metrics can't handle a mix of binary and continuous targets"
     ]
    }
   ],
   "source": [
    "perm = PermutationImportance(model, random_state=1,scoring = make_scorer(accuracy_score)).fit(X_train,y_train)\n",
    "eli5.show_weights(perm, feature_names = X.columns.tolist())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
